<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Geek Woodworker]]></title>
  <link href="http://ifq.github.com/atom.xml" rel="self"/>
  <link href="http://ifq.github.com/"/>
  <updated>2013-03-27T19:39:40+08:00</updated>
  <id>http://ifq.github.com/</id>
  <author>
    <name><![CDATA[靖天]]></name>
    <email><![CDATA[ifqqfi凹凸gmail刀com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[龙猫柜笼制作系列-1]]></title>
<link href="http://ifq.github.com/blog/2013/03/23/cage-for-kira/"/>
<updated>2013-03-23T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2013/03/23/cage-for-kira</id>

      <content type="html"><![CDATA[<p>
首先澄清，这里说的龙猫，其实跟猫没有关系。很多朋友见了都说：哪里是猫，明明是老鼠嘛。实际是它确实是鼠，学名美洲栗鼠，哺乳纲啮齿目豪猪亚目毛丝鼠科动物。因为样子和宫崎骏动画中的龙猫造型酷似，所以被人们叫做龙猫。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2013-03-26/IMG_5245.JPG" width="800" height="600" title="龙猫吃草图" alt="咱家的龙猫kira">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2013-03-26/IMG_5250.JPG" width="800" height="600" title="龙猫吃草图" alt="吃草卖萌两不误">
</p>


<!-- more -->

<p>
<img class="" src="http://ifq.github.com/rc/2013-03-26/IMG_5260.JPG" width="800" height="600" title="kira盟照" alt="专注的卖萌">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2013-03-26/IMG_5264.JPG" width="800" height="600" title="继续吃草图" alt="人生就是吃草+卖萌">
</p>
<p>
话说我在日本的时候就想养龙猫，但是碍于龙猫极其怕热，28摄氏度就有可能中暑致死，所以据说夏天在要长时间开这空调饲养。如此高的挑费让人难以承担，所以迟迟不敢下手。不过真正和养过龙猫的人交流之后，似乎也没有那么夸张，并且有其他一些廉价的方法给龙猫降温，所以我养龙猫的愿望成为可能。
</p>
<p>
给龙猫降温常见的方法有：空调、风扇、冰窝、半导体制冷片。风扇指标不治本，但是据说不是超级热也可以过去；冰窝能降温，但是冰化了又得换，麻烦；半导体制冷片对我来说也许是个折中的选择。制作相对复杂，但是耗电量较低，效果持续。况且身边可以找到很多制作材料，何乐而不为~
</p>

<p>
<img class="left" src="http://ifq.github.com/rc/2013-03-26/cold.jpg" title="半导体制冷片" >
半导体制冷片，通电之后一面的热量被搬运到另一面，从而产生制冷的效果。我买的是最常见的12706型号，12V6A，功率60W左右。13块钱一片，用四片，功耗240W左右，24小时开电费也不会觉得夸张。
</p>

<p>
能量守恒，有冷就有热，而且热似乎大于冷，制冷片产生的热量是比较大的。不加上辅助的散热装备，一会儿就会烧坏。幸好我身边能找到不少散热片，省了不少银子：） 
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2013-03-26/IMG_5225.JPG" width="800" height="600" title="制冷器" alt="制冷片加上散热器，中间用铝片，螺丝固定">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2013-03-26/IMG_5226.JPG" width="800" height="600"  alt="平置的制冷器，白色散热片用于制冷，黑色的面用于散热">
</p>
<p>
之前买来本来打算DIY其他东西后来放弃了的风扇，现在散热全靠他们了。为了降低几个暴力风扇的噪音，还在网上找了PWM风扇调速器。
<img class="" src="http://ifq.github.com/rc/2013-03-26/IMG_5227.JPG" width="800" height="600"  alt="不要小看那个小个子的，这家伙12V5A，能把自己吹起来，超暴力！就是声音很大。。">
<img class="" src="http://ifq.github.com/rc/2013-03-26/IMG_5228.JPG" width="800" height="600"  alt="这个涡轮风扇也有12V4A，也很暴力。">
</p>
<p>
说了半天，这个60W，那个5A，没有个给力的电源都是白搭。身边找到一个不用的PC电源，300W，足够用了。还是DELL上拆下来的~
<img class="" src="http://ifq.github.com/rc/2013-03-26/IMG_5229.JPG" width="800" height="600"  >
</p>

<p>
最后是这次project的主体了，制冷器再好，没有一个封闭的空间，也没有好的制冷效果。这时候是我木工爱好大显身手的时候了。用SketchUp画了个草图，大概就按这个来做了。两侧和柜门都用钢化玻璃；最下方是一个大抽屉，放龙猫的东西；抽屉上方的隔层是猫沙架子；顶部的留空可以上钢丝网也可以上制冷器模块。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2013-03-26/cage.PNG" width="600"  >
</p>
<p>
木材也到位了，剩下来就等大汗淋漓一番了。Thanks for looking~ 
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2013/03/23/cage-for-kira/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[悬挂式床头灯]]></title>
<link href="http://ifq.github.com/blog/2013/01/16/bedlamp/"/>
<updated>2013-01-16T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2013/01/16/bedlamp</id>

      <content type="html"><![CDATA[<p>
床头一直缺个灯，看书不方便，但是一直也没买。原因是有了木工这个爱好之后，什么东西都琢磨着用木头能不能做。于是一直在想用木头做一个什么样的床头灯。设计是一个很有意思但有时候会令人头大的事情。有限的工艺和材料下，想做出定制的东西，能满足功能，又要好用，还要尽量新颖。有时候天马行空想了很多方案，最终不是实现不了，就是造价太高，或者不确定做出来的东西是否实用。
</p>
<p>
所以我想很多东西是需要一代一代演化的，做出一个原型，再慢慢改进。以下就是我的第一代悬挂式的床头灯。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2013-01-16/P1165012.JPG" width="800" height="600"  >
</p>


<!-- more -->

<p>
我家的床靠背比较高，比较厚，而且目前是靠墙放，所以床头灯就真的要做到头上了。开始想做可调角度的，但是越想越复杂，最后又回到了这个简单的方案。基本上就是一个燕尾榫的盒子的变形。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2013-01-16/P1165017.JPG" width="800" height="600" title="开灯的效果" alt="两个人看书滑到中间，一个人看书滑到边上">
</p>
<p>
由于边想边做，没心思再拍照记录过程了。另外做燕尾榫的手艺还很差，图上可以看到很多地方缝隙还很大。燕尾榫的制作方法在做之前又重温了一下Rob的视频，但是在实践的时候还是遇到些问题。
</p><ol>
<li>用导突锯锯过之后，用线锯去掉废料部分的时候遇到问题了。导突锯的锯路太细，不到1mm，线锯锯条进不去。开始将就着用粗的锯子再锯一边，然后线锯塞进去。后来觉得影响精度，不得不换更细的线锯条。
</li>
<li>换了细的线锯条，锯条更容易断了。这个木头也比较硬，做一个盒子断了3，4根锯条。（木头是捡的木地板料刨出来的，不懂是什么，不知道是不是橡木）
</li>
</ol>


<p>
<img class="" src="http://ifq.github.com/rc/2013-01-16/P1165019.JPG" width="800" height="600" title="pin" alt="按照rob的说法pin可以做的更小">
</p>
<p>
顶部的盖子是滑动的，方便换灯泡什么的。灯泡用的1W*3的LED灯（10块钱）。前边的按钮想增加点质感，所以从淘宝买了不锈钢的（5块钱）。另外找了块透明塑料粘一层乳白色的塑料纸做灯罩。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2013-01-16/P1165020.JPG" width="800" height="600"  >
<img class="" src="http://ifq.github.com/rc/2013-01-16/P1165021.JPG" width="800" height="600"  >
</p>

<p>
<img class="" src="http://ifq.github.com/rc/2013-01-16/P1165022.JPG" width="800" height="600"  alt="从后面看的样子">
</p>
<p>
本来以为后边不用两个横杠加固也可以，但是制作的过程中后边的一块已经断了，最后用502粘上继续做的。end grain真的不结实。只有不断接触木头才能更了解木头啊~
</p>
<p>
Thank for looking~
</p>
<p><a rel="bookmark" href="http://ifq.github.com/blog/2013/01/16/bedlamp/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[802.11协议节电学习memo]]></title>
<link href="http://ifq.github.com/blog/2012/11/10/ps-memo/"/>
<updated>2012-11-10T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/11/10/ps-memo</id>

      <content type="html"><![CDATA[<p>
根据802.11-2012标准中，章节 <code>10.2 Power management</code> 中的描述，目前 802.11协议中存在的节电技术有以下几种：
</p><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption></caption>
<colgroup><col class="left" /><col class="left" /><col class="left" />
</colgroup>
<thead>
<tr><th scope="col" class="left">节电方式</th><th scope="col" class="left">介绍</th><th scope="col" class="left">引入时间</th></tr>
</thead>
<tbody>
<tr><td class="left">PS-Poll</td><td class="left">通过PS-Poll报文通告AP发送缓存的报文</td><td class="left">802.11</td></tr>
<tr><td class="left">S-APSD</td><td class="left">配合QoS工作，AP按照事先协商的时间片发送缓存报文</td><td class="left">802.11e</td></tr>
<tr><td class="left">U-APSD</td><td class="left">配合QoS工作，STA发送Trigger报文通知AP发送缓存报文</td><td class="left">802.11e</td></tr>
<tr><td class="left">PSMP</td><td class="left">AP通过发送单个PSMP帧i组织所有STA的缓存报文收发</td><td class="left">802.11n</td></tr>
<tr><td class="left">TDSL Peer PSM</td><td class="left">未了解，SDK中未找到</td><td class="left">802.11n（？）</td></tr>
<tr><td class="left">WNM Sleep</td><td class="left">协议中可选内容，SDK中未找到</td><td class="left">未知</td></tr>
<tr><td class="left">SM Power Save</td><td class="left">通过关闭多条receive chains中一部分来省电</td><td class="left">802.11n</td></tr>
</tbody>
</table>




<!-- more -->

<ul>
<li>基础框架 ＆ PS-Poll <br/>
  节电方式有时显得很多，很复杂，但是都遵循最基本的框架运作。
<ul>
<li>电源管理状态
<dl>
<dt>Active Mode</dt><dd>对应 STA 的 Awake 状态，STA 全功率运行，可以随时接收报文。
</dd>
<dt>PS Mode</dt><dd>对应 STA 的 Doze 状态，STA is not able to transmit or
                 receive and consumes very low power，定期苏醒接收报文。
</dd>
</dl>

</li>
<li>更改电源管理状态的方法 <br/>
    以下内容节选自 802.11-2012 章节10.2.1, 这些内容规定了状态切换的基本原则。

<blockquote>

<p>STAs changing Power Management mode shall inform the AP of this
fact using the Power Management bits within the Frame Control
field of transmitted frames。
</p>
</blockquote>


<blockquote>

<p>Power Management mode shall not change during any single frame exchange sequence.
</p>
</blockquote>


<blockquote>

<p>The Power Management bit shall be ignored in frame exchanges initiated by the AP.
</p>
</blockquote>


<blockquote>

<p>A non-AP STA shall not change power management mode using a frame
exchange that does not receive an ACK or BlockAck from the AP.
</p>
</blockquote>


<blockquote>

<p>NOTE—A PS-Poll frame exchange does not necessarily result in an
ACK from the AP, so a non-AP STA cannot change power management
mode using a PS-Poll frame.
</p>
</blockquote>



<blockquote>

<p>the Power Management bit is the same for all MPDUs in an A-MPDU.
</p>
</blockquote>


</li>
<li>PS Mode 下的动作
<ul>
<li>缓存报文
<ul>
<li>缓存到 STA 的可缓存的单播报文（某些medium access control (MAC)
       management protocol data unit不可缓存）
</li>
<li>缓存所有的广播报文
</li>
</ul>

</li>
<li>发送 TIM 和 DTIM
<dl>
<dt>TIM</dt><dd>traffic indication map, 每个Beacon都携带
</dd>
<dt>DTIM</dt><dd>delivery traffic indication map，特殊的TIM，关注广播包围。
               在携带DTIM的Beacon发出后，AP会随即发送缓存的广播报文。

</dd>
</dl>

<p>      TIM 具体格式参看 802.11-2012，8.4.2.7 TIM element。
      <img src="http://ifq.github.com/rc/tim-element.PNG"  alt="/rc/tim-element.PNG" />
</p><ul>
<li>Bitmap 中每一个bit与一个STA的AID对应。具体计算方法参加协议。
</li>
<li>需要指出的是 Partial Virtual Bitmap 字段指示的是所有 STA 的节点
       状态，不包括广播报文。Bit 0 对应与 AID 为 1 的 STA。
<blockquote>

<p>The Bitmap Control field is a single octet. Bit 0 of the field
contains the Traffic Indicator bit associated with AID 0. This bit is
set to 1 in TIM elements with a value of 0 in the DTIM Count field
when one or more group addressed MSDUs/MMPDUs are buffered at the AP
or the mesh STA.
</p>
</blockquote>


</li>
<li>TIM 与 DTIM 的区分
<blockquote>

<p>The DTIM is indicated by the DTIM count field of the TIM
element having a value of 0.
</p>
</blockquote>


</li>
</ul>

</li>
<li>STA 接收报文
<ul>
<li>PS-Poll 与 TIM 的关系
       <img src="http://ifq.github.com/rc/tim-pspoll.PNG"  alt="/rc/tim-pspoll.PNG" />
</li>
<li>PS-Poll 获取报文 <br/>
       <img src="http://ifq.github.com/rc/ps-poll-1.PNG"  alt="/rc/ps-poll-1.PNG" />
</li>
<li>切换到 Active Mode
<blockquote>

<p>When an AP is informed that a STA has changed to the Active
mode, then the AP shall send buffered BUs (if any exist) to
that STA without waiting for a PS-Poll. When
</p>
</blockquote>


</li>
</ul>

</li>
</ul>

</li>
</ul>

</li>
<li>youtube上有个 Video 介绍了节电的基本概念，对初学者有参考价值。（不过英文着实难懂）
<ul>
<li><a href="http://ifq.github.com/video/Power Save Mechanisms Supported in IEEE 802.11 Protocol - Tutorial 1.mp4">节电介绍视频1/2</a>
</li>
<li><a href="http://ifq.github.com/video/Power Save Mechanisms Supported in IEEE 802.11 Protocol - Tutorial 2.mp4">节电介绍视频2/2</a>

</li>
</ul>

</li>
<li>U-APSD
   <img src="http://ifq.github.com/rc/u-apsd-1.JPG"  alt="/rc/u-apsd-1.JPG" />

<ul>
<li>在基础构架的之上，不同之处在于STA唤醒后于AP交互的方式。Trigger
     Frame不再是PS-Poll，而是特定优先级的QoS报文作为Trigger报文。
<ul>
<li>Trigger 报文的决定可以在管理过程中协商，也可以关联后用ADDTS报文协商。
</li>
</ul>

</li>
<li>BU 按照 Qos 优先级分别进行缓存。有如下两个概念：
<ul>
<li>trigger-enabled AC
</li>
<li>delivery-enabled AC
</li>
</ul>

</li>
<li>注意点：
<ul>
<li>STA 只需要发送一个Trigger报文来通告AP，AP在随后的处理中会发送buffer的多个报文。
       和 PS-Poll方式不同。
<blockquote>

<p>If the STA has set up to use unscheduled SPs, the AP shall
buffer BUs using delivery-enabled ACs until it has received a
trigger frame using a trigger-enabled AC from the non-AP STA,
which indicates the start of an unscheduled SP. A trigger frame
received by the AP from a STA that already has an unscheduled SP
underway shall not trigger the start of a new unscheduled SP
</p>
</blockquote>


</li>
<li>以下内容指明何时返回休眠。
<blockquote>

<p>The STA shall remain awake until it receives a QoS data frame or
QoS Null frame addressed to it, with the EOSP subfield in the QoS
Control field equal to 1
</p>
</blockquote>


</li>
</ul>

</li>
<li>更多内容参考 802.11-2012 的 10.2.1.6，10.2.1.8，10.2.1.9
</li>
</ul>

</li>
</ul>



<ul>
<li>PSMP
<ul>
<li>原理
<blockquote>

<p>Power Save Multi-Poll (PSMP) is a feature of 802.11n that extends
the Automatic Power Save Delivery (typically called APSD)
mechanism defined in 802.11e by allowing the client stations to
operate on a group schedule rather than individually.
</p>
</blockquote>


<p>
    <img src="http://ifq.github.com/rc/psmp-1.JPG"  alt="/rc/psmp-1.JPG" />
</p>
<ul>
<li>AP 通过发送 PSMP 报文通知所有STA 之后的 上下行 缓存报文发送的安排。
</li>
</ul>

</li>
</ul>

</li>
</ul>



<ul>
<li>SM Power Save

<ul>
<li>原理
<ul>
<li>Spatial Multiplexing Power Save 的缩写
</li>
<li>通过关闭硬件的部分流，从而节电。
<blockquote>

<p>A STA consumes power on all active receive chains, even though
they are not necessarily required for the actual frame
exchange. The SM Power Save feature allows a STA to operate with
only one active receive chain for a significant portion of time.
</p>
</blockquote>


</li>
<li>有静态和动态两种模式。
<ul>
<li>静态模式下，STA 将一直关闭部分硬件，持续以单流的形式与AP通行。
</li>
<li>动态模式下，STA 关闭部分硬件，处于单流模式。当接受到一个单流的
        单播报文后，开启省电关闭的硬件，切换到多条流的工作状态。通常使
        用RTS/CTS报文完成这个动作。
<blockquote>

<p>In dynamic SM power save mode, a STA enables its multiple
receive chains when it receives the start of a frame sequence
addressed to it. Such a frame sequence shall start with a
single-spatial stream individually addressed frame that
requires an immediate response and that is addressed to the
STA in dynamic SM power save mode. An RTS/CTS sequence may be
used for this purpose.
</p>
</blockquote>


</li>
</ul>

</li>
</ul>

</li>
<li>SDK 现状
<ul>
<li>AP 自身处于 <code>HT_CAP_MIMO_PS_OFF</code> 状态，即始终不使用 SM Power Save。
</li>
<li>STA 可根据自身情况决定 SM Power Save 状况，并通告 AP。关联时或通过Action报文。
</li>
</ul>

</li>
</ul>

</li>
</ul>



<ul>
<li>其他
    之前北京XX出现过 Intel 6205 网卡的笔记本无故变成单流，之后发现是笔记本使能了静态的SM Power Save导致。

<ul>
<li>为了避免这种情况对笔记本进行了多种设置和改动，均不能解决。
</li>
<li>AP 方面做实验强制将 STA 设为非 SM Power Save 模式也不能生效。由于
      这个过程不是协商的，STA 仅是通过自己的 SM Power Save状态。

</li>
</ul>

<p>    最终只能认定为笔记本端硬件，或者驱动的动作导致进入该状态。
</p></li>
</ul>


<p><a rel="bookmark" href="http://ifq.github.com/blog/2012/11/10/ps-memo/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[更新octopress博客系统后的笔记]]></title>
<link href="http://ifq.github.com/blog/2012/10/29/upgrade-octopress/"/>
<updated>2012-10-29T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/10/29/upgrade-octopress</id>

      <content type="html"><![CDATA[<p>
octopress的博客系统使用有一段时间了。总体很满意，发博客也渐渐上手了。但是也还有些小问题困扰。比如导入过往blog之后，总共的post量比较大，每次generate的时候耗时很长；比如comment数量总是显示为零。
</p>
<p>
关于前一个问题，目前还没有找到很好的解决方案，再等等看octopress自己会不会改进这个问题吧。关于comment数量的显示，查到这个bug实际已经解决，但是需要升级到2.1 的branch才行（之前是master分支,是2.0）。于是对博客系统进行了升级，过程这里不复述了，可以参考<a href="http://octopress.org/docs/updating/">官方指南</a> 。但是要注意merge的时候自己定义的一些改动会不会被覆盖，样式表、页脚链接之类。
</p>
<p>
最终结果，comment的问题解决了，theme最后换回了classic界面。。大众一点也好，UI更友好。后边空闲的时候可以加点logo之类的装饰下。以下是几点memo，供参考。
</p>
<ul>
<li>upgrade octopress <br/>
  如果你使用 <code>git pull octopress 2.1</code> 更新时，提
  示没有相应的 repo，那么说明你和我一样，需要以下的命令首先把octopress
  添加到remote的repo列表。
<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>git remote add octopress https://github.com/imathis/octopress.git</span></code></pre></td></tr></table></div></figure>

</li>
</ul>




<!-- more -->

<ul>
<li>回退错误的 git pull <br/>
  如果做git pull操作的时候, pull错了branch，可以用下面的命令来恢复。
  没有专门去学过，不怎么会用，但是 git 真的感觉好庞大啊。。
<blockquote>

<p>  git reset &ndash;hard ORIG_HEAD
</p>
<p>
git pull will do two things: it does a git fetch and then a git merge
where it merges branches that have been setup to be merged in your
config.
</p>
<p>
So what you want to do is to undo the merge (undoing the fetch doesn&#8217;t
make a lot of sense and shouldn&#8217;t be necessary).
</p>
<p>
To do that you can try using git reset &ndash;hard to reset to a previous
state. Use the git-reflog command to find the SHA-1 of the previous
state and then reset to it.
</p>

</blockquote>


</li>
<li>git 删除未commit的不想要的git改动
<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>git clean -f</span></code></pre></td></tr></table></div></figure>


</li>
<li>有的post在第一次发出后可能还需要持续更新几次，在post中增加 <b>本博客于yyyy-mm-dd hh：mm更新</b> 这样的时间戳提示也许很有用。至少我在单位的个人主页有尝试这样，更新工作进展比较有用。 <br/>
  我用的方法是利用 emacs 的org模式中执行 src blog 的功能——Babel。在需要显示时间戳的地方加上以下几句：



<pre class="example">#+begin_src sh :exports results
echo "本文档更新于: $(date)"
#+end_src
</pre>

<p>
  之后export的时候转换出来的html里不再是上边几句代码，而是代码执行出来的结果。也就是显示 <code>本文档更新于: xxx</code> 。当然，为了正确导出可能需要对 org模式的 Babel 进行额外的设置。貌似需要加上以下几句：
<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>; Some initial langauges we want org-babel to support
</span><span class='line'>(org-babel-do-load-languages
</span><span class='line'> 'org-babel-load-languages
</span><span class='line'> '(
</span><span class='line'>   (sh . t)
</span><span class='line'>   (python . t)
</span><span class='line'>   (R . t)
</span><span class='line'>   (ruby . t)
</span><span class='line'>   (ditaa . t)
</span><span class='line'>   (dot . t)
</span><span class='line'>   (octave . t)
</span><span class='line'>   (sqlite . t)
</span><span class='line'>   (perl . t)
</span><span class='line'>   ))
</span></code></pre></td></tr></table></div></figure>

  实现时间戳我使用了 sh，当然你也可以用 ruby或者 perl之类。前提是emacs能够正确访问到相应的解释器。ruby如果使用rvm管理的话，可能需要找 rvm.el 做设置。
</p>
<p>
  下面这个就是时间戳的效果：
</p></li>
</ul>





<pre class="example">
本文档更新于: 2012年 11月 08日 星期四 00:43:39 CST
</pre>


<p><a rel="bookmark" href="http://ifq.github.com/blog/2012/10/29/upgrade-octopress/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Roubo Style Workbench - 靖天木工桌 5/5]]></title>
<link href="http://ifq.github.com/blog/2012/10/28/roubo-workbench-5/"/>
<updated>2012-10-28T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/10/28/roubo-workbench-5</id>

      <content type="html"><![CDATA[<p>
敢鸭子上架，尽管有各种的问题，但是总装的时刻还是来了~ 上周末终于把 End vise 和 leg vise 都装上了；所有腿部的横梁也都固定了；靖天木工桌终于站起来了~ 以下的内容比较凌乱，请读者自行缓存并排序~
</p>
<p>
腿钳使用两张3cm的板子粘接而成，下面的那根垂直的我不知道该怎么称呼，就叫slide guide吧。。是用木地板的废料做的。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA214446.JPG" width="600"  alt="腿钳刚做好的样子">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA214447.JPG" width="600"  alt="起初担心那根guide不能很好的垂直于面板，结果却异常的好">
</p>
<p>
等待leg vise粘接的过程中，开始安装end vise。考虑尽量加大夹持深度，所以vise没有直接装在桌面底面，而是加了6cm的木块垫低。（实践证明效果不怎么好）
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA214448.JPG" width="600"  alt="end vise 装上的效果，此时还缺少一边的夹持面">
</p>


<!-- more -->

<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA214449.JPG" width="600"  alt="这张比较清楚的看到被垫低的台钳底部">
</p>
<p>
顺便给大家介绍下我的钻头。由于要安装腿钳，开比较深的洞，手头上之前的开孔器都不能胜任，于是购买了新的钻头。本来要买支罗钻，不过在网上看到这种钻头，比支罗钻还要便宜点，就买了。使用效果感觉不错，头部的尖形结构有助于定位，不容易跑偏。不过开32mm大孔的时候我的手钻还是比较吃力，容易卡死，手钻烫的非常。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA214450.JPG" width="600"  alt="新钻头比较给力，可以开12cm深，口径不大时刷刷两下就搞定">
</p>
<p>
回到安装腿钳的task。桌腿底部需要给slide guide一个孔穿过。 10cm的透榫眼，用上新买的钻头也让开这个榫眼提速许多。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA244454.JPG" width="600"  alt="几面划线，都能对上，看来之前腿部刨的够方正。">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA244459.JPG" width="600"  alt="腿钳下部废料锯掉，量好位置开32mmo孔。（实际上这时候的腿钳有个致命bug，你看出来了么）">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA254460.JPG" width="600"  alt="开好孔的腿与腿钳第一次合体~">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA254462.JPG" width="600"  alt="多角度看合体~">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA254463.JPG" width="600"  alt="多造型和合体~">
</p>
<p>
下面这张图解释了前边提到的腿钳的致命问题，你看出来了么？
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA264602.JPG" width="600"  alt="重新修过的腿钳面板，看出不同了么">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA264605.JPG" width="600"  alt="粘接两个方块用来做slide guide的滑轮结构">
</p>
<p>
给桌腿钻32mm孔的过程可以用‘心惊胆战’四个字形容~ 洞，只能开一个，歪了就只能哭了。所以一直迟迟不想动手。为了尽量不钻歪，仔细划线之后从两面分别钻。口径大，手钻不稳，有时候卡住还会跳起来，真是不容易。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA264608.JPG" width="600"  alt="虽然还是有点歪，但是最后的结果还是比较满意的">
</p>
<p>
腿部要开的孔终于开完了，可以把这一侧的腿部和两个横梁粘接了。（另一侧上次就粘了）
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA274611.JPG" width="600"  alt="粘好腿，上好钳，翻过来~">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA274614.JPG" width="600"  alt="桌底一瞥">
</p>
<p>
折腾了好久了，两个vise还是一个没装上呢，给end viseu准备的夹持面板也粘好了（一片3cm木板+4跟3cm木方粘成的面板再粘起来组成的。。实在没木头了。。），可以先把end vise 装好了。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA284634.JPG" width="600"  alt="又到打孔时，结果图~">
</p>
<p>
这几个孔打的时候吸取了另一面打孔时的经验，顺利了不少。手钻打孔有几个诀窍
</p><ul>
<li>孔尽量大点，不要妄想准确贴和
</li>
<li>几个孔要配合时先量一个孔的位置，打孔，然后套上实际部件，定位其他孔。
</li>
</ul>


<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA284635.JPG" width="600"  alt="拆开台钳定位">
</p>
<p>
话题突然跳到两根长的横梁的紧固方式上。这个是从网上学来的，关于这个紧固方式我经历了如下几个phase：
</p><ol>
<li>中意
</li>
<li>决定实施
</li>
<li>准备材料
</li>
<li>觉得麻烦
</li>
<li>准备放弃
</li>
<li>材料都买了
</li>
<li>敢鸭子上架
</li>
<li>满意
</li>
</ol>


<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA284674.JPG" width="600"  alt="这样连接结识，可拆卸，模块化啊~">
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA284676.JPG" width="600"  >
</p>
<p>
后边的安装过程有一段没有拍照，可以称之为 <b>“黎明前的黑暗”</b> 。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA284636.JPG" width="600" title="艳照" alt="咦，错选了一张艳照。。色彩艳丽的照片">
</p>
<p>
如果说之前桌子组装起来叫alpha版，那么现在，应该叫beta版。 <i>Ladies~~~ ，and gentleman~~~，I now present you with the first beta version of 靖天 roubo style workbench~~~</i>
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA284665.JPG" width="600"  alt="鼓掌~">
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA284668.JPG" width="600"  alt="哇哦~">
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA284671.JPG" width="600"  alt="尖叫~">
<img class="" src="http://ifq.github.com/rc/2012-10-28/PA284678.JPG" width="600"  alt="口哨~">
</p>
<p>
最后对剩余的task已经之前的花费做个整理。
</p><ul>
<li>todo list
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption></caption>
<colgroup><col class="left" /><col class="left" />
</colgroup>
<thead>
<tr><th scope="col" class="left">task</th><th scope="col" class="left">content</th></tr>
</thead>
<tbody>
<tr><td class="left">表面处理</td><td class="left">打磨，修边，木蜡油</td></tr>
<tr><td class="left">桌腿调整</td><td class="left">现在桌子其实有点不稳。。</td></tr>
<tr><td class="left">台钳调整</td><td class="left">腿钳的slide guide还没有钻孔，end vise 也还不太好用</td></tr>
<tr><td class="left">装层架</td><td class="left">现在这样桌下空间太浪费</td></tr>
<tr><td class="left">做benchdog</td><td class="left">就是塞进桌面方孔用的紧固装置</td></tr>
<tr><td class="left">桌面固定</td><td class="left">桌面和桌腿之间需要用螺丝固定</td></tr>
<tr><td class="left">装滑轮</td><td class="left">方便搬动桌子，现在不到100斤也有70了吧</td></tr>
</tbody>
</table>

  看来需要做的事情还不少，还需要一个post了&ndash;chapter 6/5&ndash;其实早就知道还需要了~

</li>
<li>数据整理
  桌子尺寸 ： 100 * 40 * 85 （cm，长*宽*高，不算台钳）

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption></caption>
<colgroup><col class="left" /><col class="left" />
</colgroup>
<thead>
<tr><th scope="col" class="left">材料</th><th scope="col" class="left">价格</th></tr>
</thead>
<tbody>
<tr><td class="left">木料</td><td class="left">200元</td></tr>
<tr><td class="left">台钳</td><td class="left">230元</td></tr>
<tr><td class="left">螺丝</td><td class="left">30元</td></tr>
<tr><td class="left">滑轮</td><td class="left">60元</td></tr>
<tr><td class="left">胶水</td><td class="left">30元</td></tr>
</tbody>
</table>

</li>
</ul>


<p>
最终beta版好不好用，还得实际用它做一两个项目才能有体会，后续我还会把使用的体会和相应的改造写出来，供大家参考~ Thranks for looking~
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/10/28/roubo-workbench-5/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Roubo Style Workbench - 靖天木工桌 4/5]]></title>
<link href="http://ifq.github.com/blog/2012/10/20/roubo-workbench-4/"/>
<updated>2012-10-20T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/10/20/roubo-workbench-4</id>

      <content type="html"><![CDATA[<p>
This is just a quick update about my prograss.
</p>
<p>
这两周速度比较慢，其实就做了一件事情&ndash;开榫眼。大小共12个榫眼。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-18/PA144348.JPG" width="600" title="开好的榫眼" alt="先用钻头，再用凿子。只可惜当时还没有用上在淘宝买的新钻头，不然应该会快一些">
</p>


<!-- more -->

<p>
<img class="" src="http://ifq.github.com/rc/2012-10-18/PA164349.JPG" width="600" title="组装好的单侧的腿" alt="榫接的部位有的地方还有比较明显的接缝，锯榫头时出的问题">
</p>

<p>
<img class="" src="http://ifq.github.com/rc/2012-10-18/PA164350.JPG" width="600"  alt="装上横梁在桌面上测试">
</p>
<p>
本来希望上方的横梁能够和腿的榫肩平齐，这样可以多一点额外的support托主桌面，但是好像划线出了问题，横梁和桌面之间有几mm的缝隙。现在已经没有办法修正了，只有后期塞点什么东西进去了。实践证明晚上干活容易出错。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-18/PA184354.JPG" width="600" title="装上所有的横梁" alt="my roubo bench，you finally turned over!">
</p>
<p>
上图中左侧的桌腿已经上胶了，右侧的还没有。原因是右侧的腿还要装leg vise，担心粘在一起之后不好施工。Project做到后期就越来越束手束脚，对一些大的动作犹豫不决，装腿钳需要在桌腿上贯穿一个30mm的大洞，一旦钻进去了，no back off。有时候你就会蹲在那里一直想怎么样才可以万无一失，这也是进度变慢的一个原因。
</p>
<p>
btw，桌面和腿之间，以及两条长的横梁我不打算上胶，未来使用螺丝固定。这样整个桌子分为了三个部分&ndash;两个腿的结构和一个桌面，未来那部分如果出了问题，方便处理&ndash; <b>模块化</b> ：）
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-18/PA184355.JPG" width="600" title="另一个角度" alt="左侧这一面是要装end vise的，你可以看到右下角地面上的vise， 迟迟不敢下手。。">
</p>
<p>
后面的工作我可以渐渐从地面转移到桌面了，伏地苦干半个月，终于迎来了这一刻，泪牛满面~ <i>（不过现在腿部还没粘接完，桌面还不稳，刨东西还是得在凳子上。）</i>
</p>

<p>
<img class="" src="http://ifq.github.com/rc/2012-10-18/PA184358.JPG" width="600"  alt="桌腿内侧可以看到不平整，还有树皮，那是因为木料不够了。。my rough style">
</p>
<p>
另外，当了这个阶段，可以考虑finishing的问题了。木工桌其实可以不上漆，但我这个衫木比较软，上漆也许可以增加点表面强度，也减少点变形的可能。我还是打算用手头的木蜡油，关键问题在于颜色。有两种色浆&ndash;沉稳一点胡桃木色和小清新一点的地中海绿色。选神马好呢？？
</p>
<p>
Thanks for looking~
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/10/20/roubo-workbench-4/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Roubo Style Workbench - 靖天木工桌 3/5]]></title>
<link href="http://ifq.github.com/blog/2012/10/09/roubo-workbench-3/"/>
<updated>2012-10-09T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/10/09/roubo-workbench-3</id>

      <content type="html"><![CDATA[<p>
十一结束了，木工桌的雏形也呈现出来了。不过上班之后进度也慢下来了，不知道这个月能不能搞定了。十一后边两天的进展先跟大家说说。
</p>
<p> 
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA044124.JPG" width="600" title="刨桌腿" alt="四个桌腿粘好了，刨成四方是一个大工程">
</p>
<p>
由于粘合之前只刨了粘接的面，所以粘好的腿是各种扭曲的。不过比想象中轻松的是这种没有刨光的木料其实也不难刨，当时买的时候还有点犹豫。外边卖的成品的木方，没有刨过的木料尺寸会更大点，比较适合做腿。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA054125.JPG" width="600" title="四面刨好的桌腿" alt="经过5，6个小时的战斗，四个腿终于分两天搞定了">
</p>


<!-- more -->

<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA054127.JPG" width="600" title="切桌腿的端面" alt="比较平整的面可以用低角度刨来处理，特别扭曲的就直接锯了算了">
</p>
<p>
锯端面的时候我的saw guide的作用就体现出来了，一次搞定，不用锯完了再用刨子shoot。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA054131.JPG" width="600" title="四个一样高的桌腿" alt="搞定的桌腿，本来打算高80cm，结果有一个只能到78，就干脆都78得了">
</p>
<p>
正宗的roubo workbench的桌腿的榫头很大，是双透榫的结构，桌面上有很大的榫头。我怕麻烦也担心做不好，还是采用一般的榫头了。网上也有这么做的，也不会不结实。榫头不上胶，桌腿和桌面使用另外的螺丝固定，这样可以拆开来。（不过估计也不会怎么拆）
</p>
<p>
关于开榫头的方式，这次使用了在youtube上的视频，对我来说是新方法。以往都是全部靠锯子锯榫头和榫肩。这次先锯几个面的榫肩，就是和腿正交的那个面，之后榫头的部分用凿子敲出来。这么做可以节省一定的时间，顺着纹理敲也不费力，敲起来轻松加愉快。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA064137.JPG" width="600" title="工作照" alt="来一张本人敲榫头时轻松愉快的场景&ndash; by miula">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA064156.JPG" width="600" title="凿子敲榫头" alt="这张看的比较清楚，先离划的线一定距离敲掉大部分废料，再用凿子细修一下。">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA064162.JPG" width="600" title="凿榫头" alt="来张抓拍的~">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA064171.JPG" width="600" title="完成的榫头" alt="不到一个小时搞定榫头（榫肩先锯好的），这个办法适合纹理比较直的木头，如果刚好碰到死结什么的就不一定好使了">
</p>
<p>
腿基本搞定之后是时候搞榫眼了。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA064172.JPG" width="600" title="划榫眼" alt="桌面地下不好划，动用了各种家伙">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA074338.JPG" width="600" title="凿榫眼" alt="偷工，先用电钻整">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA074337.JPG" width="600" title="凿好的榫眼" alt="可以看到桌子背面拼板的缝隙有的地方有点大，不过我觉得不影响使用">
</p>
<p>
最后。。闪亮登场~~~~~
</p>

<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA074342.JPG" width="600" title="小组装" alt="上了腿的桌子，两个字：厚重。不过目前还是摇摇晃晃的">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-07/PA074343.JPG" width="600"  alt="最后，给四个桌腿做了横杠，十一就结束了。。">
</p>


<p>
Thanks for watching~ 
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/10/09/roubo-workbench-3/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Roubo Style Workbench - 靖天木工桌 2/5]]></title>
<link href="http://ifq.github.com/blog/2012/10/04/roubo-workbench-2/"/>
<updated>2012-10-04T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/10/04/roubo-workbench-2</id>

      <content type="html"><![CDATA[<p>
话接上回，roubo木工桌的桌面的两组拼板分别占好了，下一步将两块再拼起来。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-04/P9253612.JPG" width="600" title="占接" alt="这次得出动80cm的木工夹了">
</p>
<p>
桌面上放的是淘宝上买的1kg装的白乳胶，很好用，密封也不错，下次可以买更大的包装的了。
</p>


<!-- more -->

<p>
这里不得不再说下F夹，拿来紧固榫卯结构神马的没问题，拿来拼板有点受力不均，容易把板子弄错位了。这次还是很厚的拼接，如果是比较薄的拼板，就没办法了。管夹或者网上有介绍自制的木质拼板夹可能更好用点。
</p>
<p>
另外一个要介绍的是桌面的造型，可以看到一个缺口。最初的设计是没有这个缺口的，后来受youtube一个视频的启发，留一个这样的缺口有时候也许很有用。比如在一根木头上凿洞，两头受桌面支撑，更好操作。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-04/P9273614.JPG" width="600" title="粗刨过的桌面" alt="木井方粗刨，拉刨再上，低角度欧刨用来刨端面">
</p>
<p>
可惜照片还是拍的少，没有桌面刨平前的对比照。其实这部分处理是最爽的，粗糙不齐的桌面变的很平正，从一块朽木一下变成了有价值的东西。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-04/P9273616.JPG" width="600" title="刨平的桌脚" alt="刨过的端面的样子">
</p>
<p>
刨端面的时候一般可以用shooting board，但是这个桌面太大块头了，只得用角尺划线后直接刨。这时候用低角度的小刨子处理起来比较利索一点。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-04/P9273617.JPG" width="600" title="桌面上留的缺口" alt="再来一个桌面缺口的特写，大约长15cm，宽8cm">
</p>
<p>
<i>写到这里还有一点需要交待的，由于我手工操作为了提高速度，这次没有对每一块板子都刨到四方切尺寸一致，而是主要对施胶的面做了处理。因此拼出来的桌面并不是四方的&ndash;两个长边其实有点不平行,有好几个mm的误差。不过这个可以最后再刨平，个人觉得不一定非要每一步都非得尽善尽美，速度和品质要有个取舍，不然为了多那一点点精度耗费太大的力气会让人觉得筋疲力尽。。</i>
</p>
<p>
<b>上边的拼接之后，桌面的主体基本出来了。剩下的任务是在桌面的左边的端面加上一块板，将来使用来配合台钳使用的；同时桌面两侧与这块板子卯合最终贴到桌面上。</b>
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-04/P9303740.JPG" width="600" title="加上端面face的桌面" alt="最终的桌面出来了。宽度40cm左右。">
<img class="" src="http://ifq.github.com/rc/2012-10-04/P9303742.JPG" width="600"  alt="另一个角度">
</p>
<p>
端面的板子用燕尾榫与两侧的板子固定，同时里边有施胶，但是端面上实际上是粘不住的，所以还加了几刻5mm的木螺丝固定。（板子厚3cm）
</p>
<p>
话说燕尾榫还是很难的，这是第二次做，虽说上次有进步，但是还是有很多问题。
</p><ul>
<li>本来原意pin的那头要比tail的那块板子稍厚一点，这样pin可以突出来，再刨一下就齐活儿了。但是好像划线弄错了。
</li>
<li>燕尾榫的紧密程度很难控制。没有施胶的时候还能敲进去，本以为施胶之后更滑，没想到反而死活敲不严实了，不知道是不是里边有木屑卡住了还是怎么的。
</li>
<li>总之要做到严丝合缝，尤其是几头都严实还需要更多体会。
</li>
</ul>


<p>
<img class="" src="http://ifq.github.com/rc/2012-10-04/P9303743.JPG" width="600"  alt="燕尾榫的特写">
</p>
<p>
<b>桌面的部分告一段落，转眼间是时候做大腿了。5*12的条子两块拼一个腿。关于这个腿当初买木头的时候犯了个错误。。</b>
</p>
<p>
原本的木方长4M，老板问我怎么切，我想了下桌腿大概不到80cm，于是让他切成240和160的两段，考虑这样可以多切几个80出来。但是现在需要的桌面就是高80cm的，这样就一点余地都没有了。。还不如不去省那点，直接对半切现在更好操作了。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-04/PA023777.JPG" width="600"  alt="刨桌腿的造型">
<img class="" src="http://ifq.github.com/rc/2012-10-04/PA023779.JPG" width="600"  alt="下午几个小时的战果">
</p>
<p>
还是为了尽快出结果，所以木方只刨粘接面，然后直接粘接。等干透后再来刨方。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-04/PA034064.JPG" width="600" title="粘桌腿" alt="夹子齐上阵，隔壁邻居有点差异了，这搞嘛呢？">
<img class="" src="http://ifq.github.com/rc/2012-10-04/PA044066.JPG" width="600"  alt="四根桌腿站一排，右边这根其实不够高，只能后边想办法给他增高了">
</p>
<p>
目前的进展就到这里了。十一长假也不能全给木工吧，来张合家欢乐的~
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-10-04/2012-10-03.jpg" width="800" title="平潭" alt="我家羿宝飞高高">
</p>
<p>
欢迎各位留言交流。
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/10/04/roubo-workbench-2/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Roubo Style workbench - 靖天木工桌 1/5]]></title>
<link href="http://ifq.github.com/blog/2012/09/28/ifq-roubo-workbench-1/"/>
<updated>2012-09-28T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/09/28/ifq-roubo-workbench-1</id>

      <content type="html"><![CDATA[<p>
接触木工半年多了，handtool进了不少，但是没有注重木工桌。目前的工作平台是一个淘宝买的几十块的折叠木工桌和一条很有年头的长凳。时间长了体会出两个问题：
</p><ol>
<li>折叠桌子十分不稳，夹持能力也差。就算你有再好的刨子或者锯子，在这种桌子上还是很头大。我经常需要把桌子顶在墙上并用身体压住桌子才能施力。这样带来了很大的限制，浪费时间、浪费体力、还做不精准。
</li>
<li>高度不对。长凳上锯东西或者刨东西猫着腰，容易疲劳，时间长了很容易伤着腰。
</li>
</ol>


<p>
于是我开始关注workbench。国外的网站上可以找到各种风格的workbench，modern euro、shaker sytle，roubo style神马的。看来看去，我最喜欢roubo style，简单、粗壮、功能。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-25/BCSPLITTOPROUBO.JPG" width="600" title="benchcraft的roubo workbench" alt="一个roubo style workbench的图例">
</p>


<!-- more -->

<p>
你可以从上图看出Roubo Style的几个基本特征：
</p><ul>
<li>台面很厚。结实、不容易晃动。
</li>
<li>有一个end vise（端面的台钳）。
</li>
<li>有一个leg vise（腿钳）。利于竖直的夹持，比如做Rip cut（纵解）的时候。
</li>
<li>因为有一个腿钳，所以桌面和腿是在一个平面的。不像很多木工桌台面是突出来的。
</li>
<li>台面上有很多dog hole。（这个其他bench也有）
</li>
<li>下面中间有很多眼的那块板，叫sliding deadman。使用来配合leg vise夹持比较长的木料时辅助托举的，上边的眼用来插入木桩。
</li>
</ul>


<p>
要实现洋为中用，为我这个阳台党服务，有很多问题需要预先考虑：
</p><dl>
<dt>木料</dt><dd>要实现roubo这么粗壮的结构，能够买到合适的木头是一个问题。关于使用软木硬木网上各有说法，但是鉴于我只能买到杉木，问题也不再是问题。而主要问题是能够买到够大尺寸的木料。这个问题在上渡（福州）解决了。<br/>
          <img class="" src="http://ifq.github.com/rc/2012-09-15/P9153492.JPG" width="600"  alt="上次的post也贴出来了，出差前买的木头，现在已经干燥了">
<ul>
<li>5*12 的拿来做腿
</li>
<li>4*8 的用来拼桌面，这样台面就有8cm厚了
</li>
<li>3cm厚的那块板子拿来做台钳之类
</li>
</ul>

</dd>
<dt>尺寸</dt><dd>标准阳台党，场地有限。在阳台量来量去，最终确定尺寸在 100 * 45 左右，不算台钳。高度暂定在85，在youtube上咨询过一个人，这个高度也许比较适合我（173）。
</dd>
<dt>移动</dt><dd>要考虑经常搬动桌子到门口作业，因此得方便搬动。这个最近刚刚在淘宝上找到了合适的滑轮，后续会介绍。
</dd>
<dt>台钳</dt><dd>一个 face vise 和一个 leg vise 已经从淘宝买回来了。合计200rmb。后续会介绍。
</dd>
</dl>


<p>
比起之前的纱门制作，这个project做了很多准备和调研，也不用担心破坏了门框之类的，所以干起来更畅快。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9223574.JPG" width="600" title="赤膊上阵" alt="第一天开料的照片，第一次用新买的双刃锯，齿够大开料快">
</p>
<p>
首先打算做台面，用4*8的木方拼1米的板，这还是第一次做。而且纯手工做，总是担心精度问题。不过后来发现问题没有那么严重。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9223577.JPG" width="600" title="三个刨子三种形态" alt="手头的三个刨子，中式用来粗刨、欧式用来刨平、日式用来smooth，有点不伦不类">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9223582.JPG" width="600" title="激战到天黑" alt="主战场从家里的阳台搬到了大门外，外面要宽敞许多，幸亏邻居还不多哈。不过这也是我的公摊面积！">
</p>
<p>
为了加快速度，所有的木方并没有四面都刨，而是主要刨用来贴合的两个面，所以几条的高度有点不一致，这个最后拼好了之后再搞也不迟。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9223586.JPG" width="600"  alt="周六半天的成果物">
</p>
<p>
为了降低难度，我没有一次性拼9块板子，而是打算分两组来拼合。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9233589.JPG" width="600"  alt="周日接着把剩下的几根也刨了">
</p>
<p>
拼合之前还有一个重要的任务是做dog hole，也就是桌面上的那些眼。如果是做圆形的，那么可以拼好之后再钻，我打算做方的，所以要在拼合之前做好。理由是后续做木卡子（bench dog）的时候，方的比圆的好做（我没有车床）。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9233590.JPG" width="600"  alt="制作dog hole，要在其中一个木方上做dado，玉鸟夹背锯上阵的时候">
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9233596.JPG" width="600"  alt="锯片薄锯齿细，切出来锯路真是精细">
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9233600.JPG" width="600"  alt="锯好之后，用凿子几下就敲出一个dado">
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9233603.JPG" width="600"  alt="做好的dado">
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9233604.JPG" width="600" title="dog hole" alt="，和另一块板子竖着拼起来就成了dog hole，我做的尺寸是2.5*2.5，正好和我的凿子一样">
</p>
<p>
上边这些做好周末已经结束了，比起之前的速度算是快的了。剩下的拼板的任务就得工作日下班回来搞了。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9233608.JPG" width="600" title="粘合第一组" alt="第一组四块板子首先尝试拼合">
<img class="" src="http://ifq.github.com/rc/2012-09-25/P9253610.JPG" width="600"  alt="第二组五块板子拼合">
值得一提的是，白乳胶的粘合速度远比我想象的快。粘合第二组的时候，五块板子施胶，拼起来，上夹子。之后发现高度有点不合适，马上松夹子打算调整，但是发现已经差不开了：（ 所以上夹子的时候一定要小心，没有夹子均匀的上紧，防止跑偏。
</p>
<p>
workbench 1/5 就到这里（希望分5回可以搞定），欢迎大家留言交流。
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/09/28/ifq-roubo-workbench-1/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[纱门制作专题-3（完结）]]></title>
<link href="http://ifq.github.com/blog/2012/09/19/screen-door-3/"/>
<updated>2012-09-19T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/09/19/screen-door-3</id>

      <content type="html"><![CDATA[<p>
纱门进入最后一道工序，上漆。以前以为上漆没那么重要，但是实际动手做过一个鞋凳之后发现上漆很重要，做出来的东西看上去好不好，也许一半都得靠上漆。难怪英文里称之为finishing，做不好就不算finish吧。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9103406.JPG" width="600" title="木蜡油" alt="表面这薄薄的一层覆盖比里边的杉木要昂贵许多">
</p>
<p>
油漆有很多种，目前我还只用过木蜡油，是基于对健康的考虑首先选择了木蜡油，据称这玩意儿是纯天然的
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9103411.JPG" width="600"  alt="找了半天找到这个巧克力盒子用来调木蜡油的颜色">
<!-- more -->

之前做鞋凳用过乌木色的色浆，这次为了配合门框的颜色选了桃花心木的颜色。调颜色不能着急一下倒很多进去，出来颜色太沉了就来不及了。
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9103414.JPG" width="600" title="加色浆" alt="这种木蜡油倒出来像奶茶，异味不大，色浆加进去像巧克力酱">
</p>

<p>
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9103418.JPG" width="600" title="色浆搅拌均匀之后" alt="看起来像巧克力的木蜡油">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9103416.JPG" width="600"  alt="实际涂饰的效果">
</p>
<p>
涂了之后晾一晚上，表层基本干后，打磨，重新再涂一遍。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9133430.JPG" width="600"  alt="油漆未干～">
</p>
<p>
木蜡油全干后，安装纱网。这部分晚上赶工没有拍照。买纱网时一并买的胶条把纱网固定到之前开的槽子中。为了稳固，槽子里抹了一些白乳胶，胶条塞进去后又加上几颗螺丝固定。之后装上合页基本成型了。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9153477.JPG" width="600"  alt="组装成型的纱门">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9153479.JPG" width="600"  alt="隐形合页的效果">
</p>
<p>
安装上之后的效果：
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9153482.JPG" width="600"  alt="完全闭合">
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9153485.JPG" width="600"  alt="打开中">
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9153487.JPG" width="600"  alt="打开后">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9153490.JPG" width="600"  alt="淘宝上买的门栓，和门的颜色不是很搭，当初没有考虑颜色">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9153491.JPG" width="600"  alt="门外的效果（门没有完全打开）">
</p>
<p>
至此，整个纱门算是彻底完成了。后面又加装了一个铃铛，门外还需要加个把手，门地下也许需要个塞子用来固定。做到后期的时候由于不知道怎么将门固定到门框上（有点特殊，合页安装的位置不在门框边沿），不知道买哪种合页能满足要求，在淘宝上踌躇了好久。由于没有现成的plan作为指导，产生这种问题在所难免（算是研发。。）
</p>
<p>
越战越勇，刚刚做完立马去买了下一批木料，准备做木工的标志性用具&ndash;木工桌。每个家里装修过的人也许都见过木工桌，木工阶段每个师傅进来首先会拼凑一个简单的木工桌，一般都可以倒装电圆锯，用来开板子。但是我说的不是这种粗糙的木工桌，而是用于精细手工木工的桌子，有腿夹，有end vise，可以用来rip cut，用来固定刨料，用来固定开榫等。想想都兴奋啊，目前在出差，磨拳擦掌中～
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9153492.JPG" width="600" title="新买的木料" alt="有4＊8cm的、5＊12的、还有一块3＊20的板子">
<img class="" src="http://ifq.github.com/rc/2012-09-15/P9153500.JPG" width="600" title="横放凉置" alt="得知要出差了，赶紧先把木头买了，拉到家里晾干，让它们适应家里的环境和湿度">
</p>
<p>
这次买木料在上渡换了一家店铺，比较专业东西尺寸稍微多一点（当然还是只有杉木）。在福州有需要的朋友可能留言问我。或者各位有更好的店铺，能买到其他木种的，也可以留言交流下～
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/09/19/screen-door-3/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[纱门(Screen Door)制作专题-2]]></title>
<link href="http://ifq.github.com/blog/2012/09/14/screen-door-2/"/>
<updated>2012-09-14T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/09/14/screen-door-2</id>

      <content type="html"><![CDATA[<p>
话接上回，半扇门已经做好之后，进度愈发缓慢，出差+加班把整个进度一拖再拖，不过总算是磨出来了。
</p>
<p>
做第二扇的时候尝试了与第一扇不一样的榫接方式。之前是用透榫，像两片面包中间夹一片培根。这样做起来似乎简单点，不用很多凿的过程，但是做出来侧面会有横的那根的端面露出来，如果锯的不好会容易有缝隙，反而感觉更难点。所以这次采用更普遍的tenon-mortise的方式。
<img class="" src="http://ifq.github.com/rc/2012-08-16/P8162974.JPG" width="600"  alt="锯路很细，锯完之后看起来像划了线一样">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-08-16/P8162977.JPG" width="600"  alt="三根横向的搞定">
</p>
<p>
榫舌搞定了，开始凿榫眼。第一个孔还是老老实实凿的，第二个就怕了，于是还是借助钻子来加速。下面这个方法是我自己实践出来的，各位可以参考：
</p>


<!-- more -->

<ol>
<li>首先用凿子凿一遍，把整个榫眼的轮廓先定好，这样便于电钻定位。
   <img class="" src="http://ifq.github.com/rc/2012-08-16/P8183147.JPG" width="600"  alt="凿子定位">
</li>
<li>然后用细的钻头先钻一遍，比如4mm的。如果没有先凿过的话，边上的很容易钻偏。
   <img class="" src="http://ifq.github.com/rc/2012-08-16/P8183148.JPG" width="600"  alt="小钻头过一遍">
</li>
<li>然后再用大钻头钻。不直接用打钻头的原因也是怕跑偏。另外多用次小钻头可以多处理些边角，这样凿的时候更轻松了。<br/>
   <img class="" src="http://ifq.github.com/rc/2012-08-16/P8183150.JPG" width="600"  alt="大钻头整～">
</li>
</ol>


<p>
榫都做好之后，就是做固定纱网的槽子的时候了。开槽刨的使用还是有一定技巧的，向刨子施力不应该朝下方压向木料，而应该从后方施力，让刨子较轻的在木料上划过。不然刨刃容易陷的很深卡住，用力太猛的话还会破坏槽子，欲速则不达。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-08-16/P8183155.JPG" width="600" title="mujingfang" alt="我的中式的开槽刨，木井方，6mm刨刃。">
</p>
<p>
槽子开完之后就可以组装了，抹上胶，组装，上夹子，check square，再压点东西防止twist。
<img class="" src="http://ifq.github.com/rc/2012-08-16/P8183157.JPG" width="600"  alt="能压的东西都上了，绿檀还有这个用途哈">
</p>
<p>
第二天胶水干了，开始开嵌入式合页的槽子。第一次做这个没掌握住窍门，做的很难看。
<img class="" src="http://ifq.github.com/rc/2012-08-16/P8203334.JPG" width="600" title="合页的槽子" alt="先开中间深的部分,等中间的部分能塞进去了，再延四面划线，不然这个东西不好掌握位置。">
<img class="" src="http://ifq.github.com/rc/2012-08-16/P8203335.JPG" width="600"  alt="装上的样子">
<img class="" src="http://ifq.github.com/rc/2012-08-16/P8203338.JPG" width="600"  alt="卸下来的样子">
<img class="" src="http://ifq.github.com/rc/2012-08-16/P8213340.JPG" width="600"  alt="两扇门上的样子">
</p>
<p>
最后上一张组合起来的效果图。
<img class="" src="http://ifq.github.com/rc/2012-08-16/P8183153.JPG" width="600"  alt="略有小成～">
</p>
<p>
总算完成了2／3了，之后就是打磨、上漆、装纱网、安装了～
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/09/14/screen-door-2/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[linux下批量转换文件编码格式]]></title>
<link href="http://ifq.github.com/blog/2012/09/13/enconv-file-encode/"/>
<updated>2012-09-13T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/09/13/enconv-file-encode</id>

      <content type="html"><![CDATA[<p>
工作中被要求所有的代码文件以gb2312-unix编码格式来存放。但是移植的SDK等外来的代码多是UTF-8格式的。另外一些同事使用source insight，似乎不好指定unix的换行符（具体我不清楚），经常出现以dos换行符结尾的文件。在emacs看这些文件很烦，要么忍受每行后边带个^M,要么Ctrl+X-Enter-r，切换成dos。
</p>
<p>
介于以上原因，新项目伊始，决定先打好基础，把所有文件都转换好一下先。linux下批量转换文件的编码格式，iconv是第一个找到的，但是不是很好用。之后找到一个好工具 enca。可以用来查看也可以转换。
</p>



<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#查看</span>
</span><span class='line'>enca filename
</span><span class='line'>
</span><span class='line'><span class="c"># 将当前目录下所有的代码文件转换到gb2312格式 IFQ</span>
</span><span class='line'><span class="c"># enca方便之处是可以自动识别输入文件的编码，iconv则必须手动指定</span>
</span><span class='line'><span class="k">for </span>i in <span class="sb">`</span>find . -name <span class="s2">&quot;*.[ch]&quot;</span><span class="sb">`</span>; <span class="nb">echo</span> <span class="nv">$i</span>; <span class="k">do </span>enconv -x gb2312 <span class="nv">$i</span>; <span class="k">done</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 之后用sed将换行符全部转换为unix IFQ</span>
</span><span class='line'>sed -i <span class="s1">&#39;s/\x0D//&#39;</span> *.c
</span><span class='line'>
</span><span class='line'><span class="c">#这个是看到的一个更改文件名的方法，mark一下</span>
</span><span class='line'>find . -name <span class="s2">&quot;*.new&quot;</span> | sed <span class="s1">&#39;s/\(.*\).new$/mv &quot;&amp;&quot; &quot;\1&quot;/&#39;</span> | sh
</span></code></pre></td></tr></table></div></figure>


<p>
(E59VZJWGQVZE for <a href="http://technorati.com">http://technorati.com</a>)
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/09/13/enconv-file-encode/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[百度博客导入octopress--自力更生本领大]]></title>
<link href="http://ifq.github.com/blog/2012/09/10/baidu-blog-to-octo/"/>
<updated>2012-09-10T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/09/10/baidu-blog-to-octo</id>

      <content type="html"><![CDATA[<p>
使用门户网站的博客系统最大的不爽就是受制于人，什么都不是自己的。网络在不断变化，形式不断在变化，谁也不能保证门户网站的博客不出什么幺蛾子，也不能保证自己不会喜新厌旧。于是想要自己写的那么点废话能够连续的，稳定的呆在某角落，自立门户是最safe的选择。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/legacy/08704990f36425aca977a49e.jpg" width="500"  alt="导入过来的博客中的一张照片，当年喝绿豆稀饭后的legacy，小而强大～">
</p>
<p>
本文介绍我移动旧的百度博客的内容到octopress的方法。试想如果从baidu挪到其他门口的博客是怎么样的过程？幸运的话网站直接支持对接导入，不然就是找工具找工具找工具。但是导入到自由软件的octopress，就简单的多了。
</p>
<p>
下载了你的baidu博客的数据后（恰巧最近baidu博客升级，提供了用户下载自己内容的功能），解压进入blog子目录，敲如下几个命令，5分钟整个导出导入工作就完成了。（当然trans2octo脚本是我写好的）
</p>


<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /DIR/TO/BAIDU_DATA/
</span><span class='line'>./trans2octo.pl blog_index.html
</span><span class='line'>cp -r tmp /DIR/TO/BLOG/source/_post/legacy
</span><span class='line'><span class="nb">cd</span> /DIR/TO/BLOG
</span><span class='line'>rake generate
</span><span class='line'>rake _deploy
</span></code></pre></td></tr></table></div></figure>


<!--more-->

<p>
有一点需要特别说明的：
</p><ul>
<li>本人perl只会最初级的，弄弄正则表达式什么的，如果有错误或者更好的办法请高手指点。
</li>
<li>这个脚本主要任务是把baidu导出的以序号命名的html根据博客时间转换为yyyy-mm-dd-cnt.html的页面，并去掉不必要的内容，以及对img标签进行转换。
</li>
<li>baidu导出的数据中不包括图片数据，图片依然链接到baidu网站。为了本地化，该脚本把所有用到的照片url记录到一个log文件，通过wget命令即可全部下载。具体看脚本内的说明。
</li>
<li>有2个问题没有解决
<ol>
<li>之前的留言没有好办法导过来，不知道哪位大哥有高招。
</li>
<li>baidu导出数据里没有tag，所以之前的tag也没有了。不过陈年的东西了，大多只是垫在下面让网站看起来不那么单薄。对于我来说是这样了，如果真要找东西，用搜索比tag要快些。
</li>
</ol>

</li>
</ul>


<p>
以下奉上脚本，欢迎留言交流～ 
<figure class='code'><figcaption><span>&#8220;baidu blog trans2octo script&#8221; (trans2octo.pl)</span><a href='http://ifq.github.com/code/trans2octo.pl' title='Download code'> download</a></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/perl</span>
</span><span class='line'><span class="c1"># 用法：</span>
</span><span class='line'><span class="c1"># trans2octo.pl blog_index.html</span>
</span><span class='line'><span class="c1"># 将blog目录下的baidu博客转换为octopress格式的博客，存入tmp文件夹。</span>
</span><span class='line'><span class="c1"># 文章中的img图片标签会自动替换为octopress格式，指向本地$IMGDIR目录下。</span>
</span><span class='line'><span class="c1"># 同时会生成imglist.log记录所有图片url，可使用 wget -i imglist.log</span>
</span><span class='line'><span class="c1"># 下载到本地，保存至$IMGDIR目录。</span>
</span><span class='line'><span class="c1"># [2012-09-10 一] IFQ</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span>   <span class="nn">File::</span><span class="n">Path</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># match汉字用，不想加载其他库，还有什么好做法？</span>
</span><span class='line'><span class="nv">$HZ</span> <span class="o">=</span> <span class="s">&quot;[\x80-\xFF][\x80-\xFF].*?&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1"># YAML Head</span>
</span><span class='line'><span class="nv">$PRE</span> <span class="o">=</span> <span class="s">&quot;---\nlayout: post\ntitle: \&quot;XXXTXXX\&quot;\ncomments: true\ncategories: [legacy]\n---\n\n&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1"># 替换img字符串</span>
</span><span class='line'><span class="nv">$IMG</span> <span class="o">=</span> <span class="s">&quot;{% img XXXPIC 800 %}&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1"># img 文件夹位置</span>
</span><span class='line'><span class="nv">$IMGDIR</span> <span class="o">=</span> <span class="s">&quot;/rc/legacy/&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 创建临时文件夹</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="o">!-</span><span class="n">e</span> <span class="s">&quot;tmp&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>	<span class="k">print</span> <span class="s">&quot;create tmp dir.\n&quot;</span><span class="p">;</span>
</span><span class='line'>	<span class="nb">mkdir</span> <span class="s">&quot;./tmp&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="o">&lt;&gt;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>	<span class="nv">@links</span> <span class="o">=</span> <span class="nv">$_</span> <span class="o">=~</span><span class="sr"> /\&lt;a(.*?)\&lt;\/a\&gt;/g</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>	<span class="nb">open</span> <span class="n">IMGLIST</span><span class="p">,</span> <span class="s">&quot;&gt;./imglist.log&quot;</span> <span class="o">||</span> <span class="nb">die</span> <span class="s">&quot;open imglist fail.&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">foreach</span> <span class="p">(</span><span class="nv">@links</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>		<span class="k">if</span> <span class="p">(</span><span class="sr">/(\.\/blog\/.*?html).*?(\d{4})$HZ(\d{1,2})$HZ(\d{1,2}).* ($HZ)$/</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>			<span class="nv">$cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>			<span class="c1"># 防止重名加cnt</span>
</span><span class='line'>			<span class="k">while</span><span class="p">(</span><span class="o">-</span><span class="n">e</span> <span class="p">(</span><span class="nv">$tgt</span> <span class="o">=</span> <span class="s">&quot;./tmp/$2-$3-$4-$cnt.html&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>				<span class="nv">$cnt</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>			<span class="p">}</span>
</span><span class='line'>
</span><span class='line'>			<span class="nb">open</span> <span class="p">(</span><span class="n">origin</span><span class="p">,</span> <span class="s">&quot;&lt;$1&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="k">next</span><span class="p">;</span> <span class="c1">#die (&quot;Could not open file $1&quot;);</span>
</span><span class='line'>			<span class="nb">open</span> <span class="p">(</span><span class="n">target</span><span class="p">,</span> <span class="s">&quot;&gt;$tgt&quot;</span><span class="p">)</span> <span class="o">||</span> <span class="nb">die</span> <span class="p">(</span><span class="s">&quot;Could not open file $tgt&quot;</span><span class="p">);</span>
</span><span class='line'>			<span class="k">print</span> <span class="s">&quot;$1 --&gt; $tgt : &quot;</span><span class="p">;</span>
</span><span class='line'>			<span class="c1"># start trans</span>
</span><span class='line'>			<span class="k">while</span><span class="p">(</span><span class="sr">&lt;origin&gt;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>				<span class="c1"># get blog title</span>
</span><span class='line'>				<span class="k">if</span> <span class="p">(</span><span class="sr">/\&lt;title\&gt;(.*)\&lt;\/title\&gt;/</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>					<span class="nv">$tmp_pre</span> <span class="o">=</span> <span class="nv">$PRE</span><span class="p">;</span>
</span><span class='line'>					<span class="nv">$title</span> <span class="o">=</span> <span class="nv">$1</span><span class="p">;</span>
</span><span class='line'>					<span class="nv">$tmp_pre</span> <span class="o">=~</span> <span class="sr">s/XXXTXXX/$title/</span><span class="p">;</span>
</span><span class='line'>					<span class="k">print</span> <span class="n">target</span> <span class="nv">$tmp_pre</span><span class="p">;</span>
</span><span class='line'>				<span class="p">}</span>
</span><span class='line'>
</span><span class='line'>				<span class="c1"># del content before &lt;body&gt;</span>
</span><span class='line'>				<span class="nv">$_</span> <span class="o">=~</span> <span class="sr">s/^.*\&lt;body\&gt;//</span><span class="p">;</span>
</span><span class='line'>				<span class="c1"># del content after &lt;/body&gt;</span>
</span><span class='line'>				<span class="nv">$_</span> <span class="o">=~</span> <span class="sr">s/\&lt;\/body\&gt;.*$//</span><span class="p">;</span>
</span><span class='line'>				<span class="c1"># del h1 title</span>
</span><span class='line'>				<span class="nv">$_</span> <span class="o">=~</span> <span class="n">s</span><span class="o">|\</span><span class="sr">&lt;h1\&gt;</span><span class="o">.*</span><span class="p">?</span><span class="o">\</span><span class="sr">&lt;\/h1\&gt;</span><span class="o">||</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>				<span class="c1"># trans &lt;img&gt; to {% img %}</span>
</span><span class='line'>				<span class="nv">@imgs</span> <span class="o">=</span> <span class="nv">$_</span> <span class="o">=~</span><span class="sr"> /\&lt;img .*?src=&quot;(.*?)&quot;.*?\&gt;/</span><span class="p">;</span>
</span><span class='line'>				<span class="k">foreach</span> <span class="nv">$img_itr</span> <span class="p">(</span><span class="nv">@imgs</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>					<span class="nv">$tmp_img</span> <span class="o">=</span> <span class="nv">$IMG</span><span class="p">;</span>
</span><span class='line'>					<span class="nv">$url</span> <span class="o">=</span> <span class="nv">$img_itr</span><span class="p">;</span>
</span><span class='line'>					<span class="nv">$url</span> <span class="o">=~</span> <span class="sr">s/http.*\//$IMGDIR/</span><span class="p">;</span>
</span><span class='line'>					<span class="nv">$tmp_img</span> <span class="o">=~</span> <span class="sr">s/XXXPIC/$url/</span><span class="p">;</span>
</span><span class='line'>					<span class="nv">$_</span> <span class="o">=~</span> <span class="sr">s/\&lt;img .*src=&quot;$img_itr&quot;.*?\&gt;/$tmp_img/g</span><span class="p">;</span>
</span><span class='line'>					<span class="k">print</span> <span class="n">IMGLIST</span> <span class="s">&quot;$img_itr\n&quot;</span><span class="p">;</span>
</span><span class='line'>				<span class="p">}</span>
</span><span class='line'>
</span><span class='line'>				<span class="c1"># write to file</span>
</span><span class='line'>				<span class="k">print</span> <span class="n">target</span> <span class="nv">$_</span><span class="p">;</span>
</span><span class='line'>			<span class="p">}</span>
</span><span class='line'>
</span><span class='line'>			<span class="nb">close</span> <span class="n">origin</span><span class="p">;</span>
</span><span class='line'>			<span class="nb">close</span> <span class="n">target</span><span class="p">;</span>
</span><span class='line'>			<span class="k">print</span> <span class="s">&quot;done.\n&quot;</span><span class="p">;</span>
</span><span class='line'>		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>			<span class="k">print</span> <span class="s">&quot;$_ trans fail\n&quot;</span><span class="p">;</span>
</span><span class='line'>		<span class="p">}</span>
</span><span class='line'>	<span class="p">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="nb">close</span> <span class="n">IMGLIST</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
</p>
<p>
博客里多一些废话也感觉厚重了一点，各位没事可以看看类别legacy的内容，有一些我以前在日本的照片游记之类。
</p>
<p>
过两天有空了把更老的csdn的博客内容也搬过来。
</p>
<p>
(baidu 百度 博客 搬家)
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/09/10/baidu-blog-to-octo/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[各种 Big Machine]]></title>
<link href="http://ifq.github.com/blog/2012/09/04/really-big-machines/"/>
<updated>2012-09-04T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/09/04/really-big-machines</id>

      <content type="html"><![CDATA[<p>
在youtube上看到的视频，各种庞然大物。各种挖矿的，运火箭的。
</p><ul>
<li>2：00位置的那个钻洞的大家伙，每部电影中生活在地下的反派角色都应该攒钱
  买一个。哥谭镇的贝恩是不是也有一个啊～
</li>
<li>运火箭那个，以前电视里见过，原来它的牛B之处是可以保证表面的平稳，晃动
  都在1/6度以内！！
</li>
</ul>


   <div class="video-container">
   <video width='' height='' preload='none' controls poster='  /rc/cool-big-machine.JPG'><source src='http://ifq.github.com/video/really-big-machines-ifq.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'/></video>
   </div>

<p>
源视频地址：<a href="http://www.youtube.com/watch?v=iE-3awHYsG8&amp;list=UUqmugCqELzhIMNYnsjScXXw&amp;index=33&amp;feature=plcp">http://www.youtube.com/watch?v=iE-3awHYsG8&amp;list=UUqmugCqELzhIMNYnsjScXXw&amp;index=33&amp;feature=plcp</a>
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/09/04/really-big-machines/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[简易又结实的木工台钳方式-video]]></title>
<link href="http://ifq.github.com/blog/2012/08/17/bench-vise-video/"/>
<updated>2012-08-17T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/08/17/bench-vise-video</id>

      <content type="html"><![CDATA[<p>
刚刚在youtube上乱逛，发现了这个视频，转载过来和大家讨论下，希望没有侵犯版权什么的。
</p>
<p>
本人接下来要开始做自己的第一个木工桌了，在参考各种各样的方案和设计，其中和重要的一个考虑因素是稳定的台钳（vise）。从之前post的图片大家可以看到，我是用一些木工夹子和在淘宝买的简易bench作为工作台面，非常单薄，非常另人丧气。不管是矩，还是刨，都会各种晃动，夹的很不稳。目前打算是未来的bench要有一个
</p><ul>
<li>leg vise，就是腿钳，最大的优势是可以垂直夹长的木料
</li>
</ul>





  <img class="" src="http://ifq.github.com/rc/2012-8-18/vise1.JPG" width="400"  alt="leg vise 用这个来做">

<ul>
<li>还要有一个 end vise，在短边上，有来夹小物件，做燕尾榫什么的。
  <img class="left" src="http://ifq.github.com/rc/2012-8-18/vise2.JPG" width="400"  alt="end vise 用这种的来做">
</li>
</ul>


<p>
但是看过下面这个视频后，对我的触动蛮大的。其实这家叫bench craft的公司早就注意到，他们的腿钳效果非常的好，东西也非常的贵。这个视频中的这种方式很简单，但是是我第一次看到。
</p>
<p>
<b>想要请教大家的是，我能不能在淘宝上买到视频中那样的丝杆，或者在哪里可以买到？多少钱？</b> 之前在论坛上看到有人说那种雕刻机移轴用的丝杆太密不适合做台钳，那么哪种属性的才适合呢？请机械方面的懂行人士不吝赐教。（在下方留言十分方便，不管有没有注册都可以的）
</p>

<p>
最后奉上视频，点击后可能需要等待一下，但不会很长。
   <div class="video-container">
   <video width='' height='' preload='none' controls poster='  /video/great-vise.JPG'><source src='http://ifq.github.com/video/great-vise.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'/></video>
   </div>
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/08/17/bench-vise-video/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[纱门(Screen Door)制作专题-1]]></title>
<link href="http://ifq.github.com/blog/2012/08/15/screen-door/"/>
<updated>2012-08-15T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/08/15/screen-door</id>

      <content type="html"><![CDATA[<p>
我家房子有个特点，很多时候大门打开狂风乱做，凉爽无比。装修的时候没有发觉，也没有加以利用，因此大门口缺一个纱门。由于防盗门已经朝外开了，纱门只能朝内。单扇的纱门朝里开，不仅占地方而且很丑，于是到店里找折叠的铝合金纱门。没想到做工好点的都要4、5百一平米，不足2平的按2平算，也就是1K大洋。要是装修时花钱花麻木了兴许也就装了，搬进来过日子就觉得好贵啊。
</p>
<p>
OK，基于上述理由，自己做木头纱门成为了不二的选择，Oh yeah！
</p>
<p>
目前准备的材料如下：
</p><dl>
<dt>木头</dt><dd>鉴于新手怕浪费高级木头，以及本地（福州）木材的匮乏，使用了杉木。4＊6＊400的木方，18元一根，大概需要4根。
</dd>
<dt>纱网</dt><dd>在淘宝买，不锈钢的，加上固定用的胶条，一扇门大概需要30元吧。（我买的多些）
</dd>
<dt>连接件</dt><dd>这个在淘宝上找了好久，一直举旗不定，由于特殊原因怕买回来不能用，不过到货之后觉得没有问题（具体问题下次讲）。2个暗装（中间用），3个明装（旁边用），总共50元。
</dd>
</dl>


<p>
写这篇博客的时候工程已经做了差不多一半了。先show一下前段时间完成的情况：
<img class="left" src="http://ifq.github.com/rc/2012-07-22/IMG_3497.JPG" width="400" title="半个门～" alt="做好半个框的时候迫不及待试了一下">
</p>


<!--more-->

<p>
做这个东西最关键的问题就是怎么把木方弄直。木头买回来的时候还比较湿，加上天气潮湿，很容易变形。花了很大功夫把2米长的木方弄得基本上平直了。毕竟，自己给自己做东西，又不是给NASA做，不用那么苛刻。
<img class="" src="http://ifq.github.com/rc/2012-07-22/IMG_3270.JPG" width="800" height="600"  alt="最初刨的几根横向的短木方">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-07-22/IMG_3496.JPG" width="400"  alt="开同样的榫，每次都在尝试不同的方法">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-07-22/IMG_3499.JPG" width="400"  alt="组装第一个1/2扇门">
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-07-22/IMG_3504.JPG" width="800" height="600"  alt="确保边角都是直角">
</p>
<p>
上边的图是之前用手机拍的，夜拍效果很差。而且漏了一个重要的东西，就是背面的开槽，用于固定纱网。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-07-22/P8162969.JPG" width="600"  alt="背面槽子的样子，广角镜头有点变形">
<img class="" src="http://ifq.github.com/rc/2012-07-22/P8162970.JPG" width="800" height="600"  alt="纵向的槽子本来应该不拉通，但是为了简便，所以拉通，不影响使用">
<img class="" src="http://ifq.github.com/rc/2012-07-22/P8162971.JPG" width="800" height="600"  alt="中间横杠的链接，用的最简单的榫头，最不容易切坏，即使切的或者凿的不好，塞进去也不会很难看">
<img class="" src="http://ifq.github.com/rc/2012-07-22/P8162972.JPG" width="800" height="600"  alt="上下端的榫头用的透榫，就比较要求手工了，锯的不好就有缝隙，我还在琢磨怎么做最好.这个榫头还没有最终处理完。">
</p>

<p>
下边这些图是最近两天开动的第二个1/2扇门的制作。与之前的部分已经时隔几周，眼看夏天要结束了，纱门还没做好。。不过这次没有现成的plan指导，属于闭门造车，需要考虑很多东西，最头疼的就是与门框的连接，要占几毫米？什么形式？导致实际门宽小多少？在淘宝上考察，等到货什么的也废了不少时间。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-07-22/P8152956.JPG" width="600" title="要使用的木料" alt="两条长的刨完立在那又有点变形了，不知道最终的影响有多大。。">
<img class="" src="http://ifq.github.com/rc/2012-07-22/P8152961.JPG" width="800" height="600"  alt="新作的双线画线器来划线">
<img class="" src="http://ifq.github.com/rc/2012-07-22/P8162964.JPG" width="800" height="600" title="玉鸟锯子的成果" alt="锯路真的很细，感觉和之前做东西用圆珠笔画的线差不多粗了,当然如果锯歪了也是一样没精度">
<img class="" src="http://ifq.github.com/rc/2012-07-22/P8162973.JPG" width="800" height="600"  alt="玉鸟导突锯，好东西啊～">
</p>

<p>
目前的进展就是这样，谢谢大家围观，欢迎在下方留言交流！
</p>
<p>
最后附上一张手机拍的美图，福州乌龙江。So nice～
<img class="" src="http://ifq.github.com/rc/2012-07-22/IMG_3597.JPG" width="800" height="600"  alt="夏日的傍晚吃饱了从食堂出来经常可以看到">
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/08/15/screen-door/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[emacs + org-mode + octopress + github]]></title>
<link href="http://ifq.github.com/blog/2012/08/10/org-octopress/"/>
<updated>2012-08-10T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/08/10/org-octopress</id>

      <content type="html"><![CDATA[<p>
网站基本上搭起来了，虽然不懂Ruby，Jekyll也只知道是个什么东西。但是就how-to问题，可以和大家分享下。如果你想建立静态博客，也许有点头绪。如果你恰巧也使用emacs+orgmode，那我们就有更多共同语言了：）
<!--more-->


</p>
<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">什么是静态博客</h2>
<div class="outline-text-2" id="text-1">

<p>  静态博客（Static Blog）。。就是静态网页组成的博客。与之对比的动态博客，也就是页面是动态生成的，博客内容依存于数据库，国内各大网站提供的博客系统大都是动态博客。
</p>
<p>
  静态博客的页面可以是手工通过制作html页面来维护，这样的话博客最基本的按日期管理、文章分类等特征都得手工完成，这么笨拙的办法可能没人喜欢。于是现在多是使用辅助工具帮助生成整个博客站点，文章自动按照日期管理、有类别或者TAG分类、还融合了留言板等其他技术，octopress就是其中一员。
</p>
</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">什么是octopress</h2>
<div class="outline-text-2" id="text-2">

<p>  说到 <a href="#www.octopress.org">octopress</a>，得先说说 <a href="http://jekyllrb.com/">jekyll</a>。 jekyll 可以把以日期为文件名的 <a href="http://en.wikipedia.org/wiki/Markdown">markdown</a> 格式的文本文件转换为html的静态博客。
</p><blockquote>

<p>Jekyll is a simple, blog aware, static site generator. It takes a template directory (representing the raw form of a website), runs it through Textile or Markdown and Liquid converters, and spits out a complete, static website suitable for serving with Apache or your favorite web server. 
</p>
</blockquote>


<p>
  可以理解为jekyll是实际转化生成静态站点的脚本程序，而octopress是套在jekyll外的一层封装，使得最终生成的站点上有更好的UI，更有风格，并且有更丰富的辅助功能（留言、代码展示、视频）。与octopress类似的还有<a href="http://jekyllbootstrap.com/">bootstrip</a>。 我在公司里记录一些东西也在用，只是觉得 octopress 对移动设备的支持更好，所以才打算在公开博客里使用它。
</p>
<p>
  生成和更新服务器的命令大致如下,每次写完内容后要做的操作：
<figure class='code'><figcaption><span>生成＆更新博客的命令</span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate   <span class="c">#将source目录下的markdown文本生产为public目录下的blog</span>
</span><span class='line'>rake preview    <span class="c">#本地预览 localhost:4000</span>
</span><span class='line'>rake deploy     <span class="c">#根据public目录生成_deploy目录并上传github </span>
</span><span class='line'><span class="c">#上边的操作已经更新了网站服务器，以下是保存代码改动到github服务器的其他branch               </span>
</span><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;comments&quot;</span>
</span><span class='line'>git push
</span></code></pre></td></tr></table></div></figure>


</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3">什么是emacs</h2>
<div class="outline-text-2" id="text-3">

<p>  <a href="http://en.wikipedia.org/wiki/Emacs">emacs</a> 是一个拥有强大扩展能力的文本编辑器，扩展能力强大到可以浏览网页、发微博、调试程序、管理日程，总之什么都可以做。我本人并不是一个all-in-emacs控，我不会用emacs做发微博这类的事情，但是还是很喜欢用它工作。它有几个特点吸引我：
</p><ul>
<li>免费。
</li>
<li>丰富的辅助开发功能，比如和SVN，GIT的融合，编译make的融合。
</li>
<li>快捷键便利。
</li>
<li>不断在更新，比如现在对多国语言的支持越来越好。
</li>
<li>全球范围内强大的技术支持，网上资源很多。
</li>
</ul>




  <img class="" src="http://ifq.github.com/rc/emacs.png" width="800" height="600" title=" " alt="emacs 启动界面">

<p>
  既然emacs这么好，如果熟悉它的话，自然写博客的时候也想用它了。单纯用emacs来写markdown格式的文本固然也可以，也有相应的emacs模式配合。但是寡人不熟悉markdown格式，相反对同类型的功能更强大的org-mode略知一二，所以就想用org格式来写博客。
</p>
</div>

</div>

<div id="outline-container-4" class="outline-2">
<h2 id="sec-4">什么是org-mode</h2>
<div class="outline-text-2" id="text-4">

<p>  <a href="http://orgmode.org/">org-mode</a> 是emacs的一种扩展模式，是在 <a href="http://emacswiki.org/emacs/OutlineMode">outline mode</a> 基础上发展出来的一种文本编辑辅助模式。适合在编写大纲（outline）组织结构的文档时使用。orgmode拥有丰富的快捷键由于编辑文档，支持url link，有强大的TODO、Agenda功能用于组织计划、有方便的表格功能、可以快捷的将org文档导出成html、pdf、laTex等格式的文档。
</p>
<p>
  <img class="" src="http://ifq.github.com/rc/orgmode.jpg" width="800" height="600" title=" " alt="简单的org模式的界面">
</p>
<p>
  这里重点说一下org模式下的html导出功能。org模式可以通过配置，将指定文件夹下的所有org文件导出到一个指定文件夹内（包括子文件的层级关系），org文件之间的link也会转化为html的link，因此直接使用这个功能就可以很方便的用org模式维护一个简单的静态网站。
</p>


<figure class='code'><figcaption><span>org模式publish配置示例 </span></figcaption><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>(setq org-publish-project-alist
</span><span class='line'>      '(("note-org"
</span><span class='line'>         :base-directory "~/org/"
</span><span class='line'>         :publishing-directory "~/pub/"
</span><span class='line'>         :base-extension "org"
</span><span class='line'>         :recursive t
</span><span class='line'>         :publishing-function org-publish-org-to-html
</span><span class='line'>     :headline-levels 3
</span><span class='line'>     :html-extension "html"
</span><span class='line'>     :table-of-contents t
</span><span class='line'>     :link-home "/index.html"
</span><span class='line'>     :section-numbers t
</span><span class='line'>     :style "&lt;link rel=\"stylesheet\" href=\"/org.css\" type=\"text/css\"/>"
</span><span class='line'>     )
</span><span class='line'>
</span><span class='line'>        ("note-static"
</span><span class='line'>         :base-directory "~/org/"
</span><span class='line'>         :publishing-directory "~/pub/"
</span><span class='line'>         :recursive t
</span><span class='line'>         :base-extension "css\\|js\\|bmp\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|swf\\|zip\\|gz\\|txt\\|el\\|pl\\|mht\\|log\\|bin_\\|bat\\|tst\\|doc\\|docx\\|gz"
</span><span class='line'>         :publishing-function org-publish-attachment
</span><span class='line'>     )
</span><span class='line'>        ("note" 
</span><span class='line'>         :components ("note-org" "note-static")
</span><span class='line'>         :author "wangjingtian@xxx.com.cn"
</span><span class='line'>         )))</span></code></pre></td></tr></table></div></figure>

<p>
  通过上边的设置我只需要一个快捷键就可以将 <code>~/org/</code> 下的org文件全部导成 html 存在 <code>~/pub</code> 下。
</p><ul>
<li>org子文件层级关系保留
</li>
<li>可以为导出的html指定css格式
</li>
<li>org文件夹内的其他格式的文件，如图片也可以设置一并导入pub目录
</li>
<li>可以自动生成org文件内的目录（TOC）
</li>
</ul>


</div>

</div>

<div id="outline-container-5" class="outline-2">
<h2 id="sec-5">how-to 整合</h2>
<div class="outline-text-2" id="text-5">

<p>  终于到了org与octopress整合的部分了。关于整合 orgmode 和 octopress（jekyll），可以找到几种方式：
</p><ul>
<li>org 导出html，直接交给 jekyll 处理。这么做有个问题，org生成的html可能和 markdown 产生的html有差异，有的时候兼容性不好。比如，插入 <code>&lt;!--more--&gt;</code> 语句时，由于 org 生成的 html 充满了 div ，导致在有 headline 的情况下页面可能会乱掉。
</li>
<li>org 文件通过 emacs 的插件转换为 markdown 格式，再由 jekyll 处理。可以到<a href="https://github.com/alexhenning/ORGMODE-Markdown">这里</a> 找到相关资源。
</li>
<li><a href="http://orgmode.org/worg/org-tutorials/org-ruby.html">org-ruby</a>。 通过Ruby将 org 文件转化为 html，而不是通过emacs。<br/>
</li>
</ul>


<p>
  目前为止，我采用的还是第一种方法。
</p>
</div>

<div id="outline-container-5-1" class="outline-3">
<h3 id="sec-5-1">目录结构</h3>
<div class="outline-text-3" id="text-5-1">

<p>   以下是我现有的目录结构供参考
</p>


<pre class="example">+ blog               # 博客根目录
   + org             # org文件根目录
      + _post
   + source          # org导出根目录，也是octopress本身用于生成blog的根目录
      + _post        # markdown或者org导出的html存在这里
      + _include     # 这里是一些octopress的UI template文件
      + _layouts     # 这里也是
      + rc           # 我的照片等资源的文件夹
      + video        # 我的视频文件夹
      + ...
   + public          # 通过命令 source下的内容会自动导出到 该目录，包括自定义的 rc、video
      + blog         # 内部的子文件按年月日排列
      + rc
      + video
      + ...
   + _deploy         #通过部署命令生产，为了更新github而产生
      + ...
</pre>


</div>

</div>

<div id="outline-container-5-2" class="outline-3">
<h3 id="sec-5-2">emacs 设定</h3>
<div class="outline-text-3" id="text-5-2">

<p>   以下.emacs文件的设置有几个要点：
</p><ul>
<li>jekyll 本身针对 markdown 转化设计，但实际也支持html。但是org模式导出html时要设置为 <code>body-only</code> ，只导出html的body的部分，页面head和footer的内容由 jekyll 生成。
</li>
<li>最好不要导出目录（TOC）。
</li>
<li>base和publishing目录的设置
</li>
<li>虽然设置了资源文件的导出，但是我目前实际没有使用，而是直接把图片等资源文件放到 <code>source/rc/</code> 下。
</li>
</ul>


<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>(setq org-publish-project-alist
</span><span class='line'>      '(("blog-org"
</span><span class='line'>         :base-directory "~/blog/org/"
</span><span class='line'>         :publishing-directory "~/blog/source/"
</span><span class='line'>         :base-extension "org"
</span><span class='line'>         :recursive t
</span><span class='line'>         :publishing-function org-publish-org-to-html
</span><span class='line'>     :headline-levels 4
</span><span class='line'>     :html-extension "html"
</span><span class='line'>     :body-only t ;; Only export section between &lt;body> &lt;/body>
</span><span class='line'>     :table-of-contents nil
</span><span class='line'>     )
</span><span class='line'>
</span><span class='line'>        ("blog-static"
</span><span class='line'>         :base-directory "~/blog/org/"
</span><span class='line'>         :publishing-directory "~/blog/source/"
</span><span class='line'>         :recursive t
</span><span class='line'>         :base-extension "css\\|js\\|bmp\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|swf\\|zip\\|gz\\|txt\\|el\\|pl\\|mht\\|log\\|bin_\\|bat\\|tst\\|doc\\|docx\\|gz"
</span><span class='line'>         :publishing-function org-publish-attachment
</span><span class='line'>     )
</span><span class='line'>        ("blog" 
</span><span class='line'>         :components ("blog-org" "blog-static")
</span><span class='line'>         :author "靖天"
</span><span class='line'>         )))</span></code></pre></td></tr></table></div></figure>
   
</div>

</div>

<div id="outline-container-5-3" class="outline-3">
<h3 id="sec-5-3">操作</h3>
<div class="outline-text-3" id="text-5-3">

<p>   假如今天要写这篇新的博客，大致过程如下：
</p><ul>
<li>用emacs创建 <code>blog/org/_post/2012-08-11-org-octopress.org</code> 这个文件。(日期的部分设置了快捷键直接添加)
</li>
<li>在文件的头部加入如下内容：(这部分可以通过 <a href="http://code.google.com/p/yasnippet/">YASnippet</a> 加速添加)



<pre class="example">#+BEGIN_HTML
---
layout: post
title: emacs + org-mode + octopress + github
categories: [binary, orgmode, octopress]
comments: true
---
ORG-LIST-END-MARKER
</pre>

</li>
<li>用org模式写博客的内容。
</li>
<li>用 <code>org-publish</code> 命令导出这个org文件。
</li>
<li><code>rake generate</code> 生成博客
</li>
<li><code>rake preview</code> 可以本地先检查下
</li>
<li><code>rake deploy</code> 部署到服务器
</li>
</ul>


<p>
以上内容仅是让还未入门的同鞋了解下用octopress写博客大概的流程是什么样子。如果你不熟悉命令行，或者觉得这种方式写博客过于繁琐，那可能并不适合你。但是如果你熟悉命令行或者脚本，可以给你写博客带来不一样的感受。比如要添加很多图片到一篇博客，可以用脚本便利目录下的所有图片自动生产相应的语句，或者做更酷的事情。
</p>
<p>
Thanks for watching. Any comments and suggestions are welcomed.
</p></div>
</div>
</div>
<p><a rel="bookmark" href="http://ifq.github.com/blog/2012/08/10/org-octopress/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[玉鸟导突锯使用感受]]></title>
<link href="http://ifq.github.com/blog/2012/08/07/gyokujou-saw/"/>
<updated>2012-08-07T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/08/07/gyokujou-saw</id>

      <content type="html"><![CDATA[<p>
托朋友从日本带回来了一些工具，其中包括一把玉鸟的导突锯（doutuki）。其实没有追求日式工具，初学者工具不全，之前都是用木井方的小号框锯开榫，只是想体验下夹背锯。夹背锯又有日式、欧式之分。差了下正宗的欧式夹背锯很难买到切很贵，自己刚好有朋友在日本所以就选择了日式的。要特别说明的是，我觉得各式工具没有必要拼个高下，自己用这顺手就是好工具。作为业余爱好，体验不同风格的工具，是一种乐趣。
</p>
<p>
因为我还是个初学者，没有摸过多少工具，所以做不了深度的评价。之所以写出来，是因为体会到国内没有木工爱好者的生态环境，相应的工具、书籍和其他资源少之又少。想在自己所在的城市逛逛，看看夹背锯？估计大部分人没有机会。所以我分享点图片，让其他初学者能多一点概念。
</p>
<p>
根据官网的介绍锯齿和锯片都分别做了特殊处理。
</p><ul>
<li>锯齿用什么微波冲击什么的，使得表面硬度很高，内部具有韧性。这样锯子很耐用。表面硬度达到Hv900～1200，而给出的参考硬度三棱锉的硬度为Hv800～850.因此这样的替刃式锯片后期想自己锉齿基本上是没有什么意义的，表面的高硬度的一层被锉掉之后，这个锯子应该就没有多少特别之处了。
</li>
<li>锯片这个表面做了防锈处理。不过我还是保险起见涂了油保护。
</li>
</ul>


<p>
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042736.JPG" width="800" height="600" title="玉鸟夹背锯" alt="锯子的一面，官网说表面有特殊的图层，防止生锈。">
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042737.JPG" width="800" height="600" title="玉鸟夹背锯" >
</p>


<!--more-->

<p>
看到锯子的外观的第一感受：
</p><ul>
<li>锯柄很长，足有30cm长。对这种设计还不是很习惯和理解。难道是为了双手使
  用么？ 但是这个锯子的主要用途不是精细加工么？
</li>
<li>锯刃很薄，官网说是0.3mm，总之很薄。
</li>
<li>夹背的部分金属比较厚，很结实，不会晃动。
</li>
<li>整个的尺寸如下:
<ul>
<li>锯柄长30cm
</li>
<li>锯刃长24cm
</li>
<li>锯片最宽处5.5cm，靠手柄最窄处4cm左右
</li>
</ul>

</li>
</ul>



<p>
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042738.JPG" width="800" height="600" title="玉鸟夹背锯" >
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042740.JPG" width="800" height="600" title="手柄" alt="广角镜头，变形比较严重点，不过手柄确实很长">
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042743.JPG" width="800" height="600" title="夹背的部分" alt="夹背的部分比想象中的厚实">
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042744.JPG" width="800" height="600" title="固定锯片的旋钮" alt="和田岛之类的锯子不一样，这个锯片的锁紧方式是用旋钮">
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042745.JPG" width="800" height="600"  alt="锯子的齿间距为1.3mm，换算一下大概19.5tpi">
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042763.JPG" width="800" height="600"  alt="找块木头试一下">
</p>
<p>
顺便展示下今天刚到的C型大力钳。加持的厚度需要通过手柄后部的旋钮调节，但是调节好后操作十分方便。对于需要反复夹住松开的场景十分便利。比如需要刨平一个木方，需要反复检查的时候，用F夹就很烦，其实并不需要特别大的加持力，这时候用大力钳就省事多了。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042766.JPG" width="800" height="600"  alt="新买的大力钳，很方便。在这种场景下比F夹快很多">
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042767.JPG" width="800" height="600"  alt="夹持的效果很好，力度适中">
</p>
<p>
查看官网对锯齿设定的解释：
</p><ul>
<li>这个锯子的另一个特点是为了迎合榫头的加工，锯齿设计为即适合横截（cross cut），又适合纵解（rip cut）。由于没有微距镜头，不能把实际的锯齿样子特写出来。。
</li>
<li>19.5 TPI 的设定和欧式夹背锯是差不多的。（TPI就是每英寸多少个齿的意思）
</li>
</ul>



<p>
实际使用的感受：
</p><ul>
<li>锯路很细。锯片只有0.3mm，当然锯路不会宽到哪里去。
</li>
<li>还是没有体会到长手柄的用途，感觉不会握到很后边的位置去。如果有了解日本锯的朋友可以在下边留言，教教我。
</li>
<li>和田岛三倍速比较，感觉锯的手感要快许多。但是有两个问题需要指出：
<ul>
<li>我的田岛已经用了好几个月了，不是新的。
</li>
<li>我没有实际数锯了几个来回，只是手上感觉要快许多。
</li>
</ul>

</li>
</ul>


<p>
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042768.JPG" width="800" height="600" title="锯路的情况" alt="与最常见的田岛三倍速的对比，右边四个是田岛的">
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042772.JPG" width="800" height="600"  alt="锯路的一面">
<img class="" src="http://ifq.github.com/rc/2012-08-04/P8042773.JPG" width="800" height="600"  alt="锯路的另一面">
</p>
<p>
关于这个锯子有任何问题都欢迎你在下方留言与我交流。Thanks for watching.
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/08/07/gyokujou-saw/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[N0.0 Post - Why I'm back to blog]]></title>
<link href="http://ifq.github.com/blog/2012/08/03/1stpost/"/>
<updated>2012-08-03T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/08/03/1stpost</id>

      <content type="html"><![CDATA[<p>
为什么我又回到博客？既然说到“又”，那最好介绍下以前的博客，他们现在还活着，不过已经沉寂很久了。
</p>
<dl>
<dt><a href="http://blog.csdn.net/ifq">http://blog.csdn.net/ifq</a></dt><dd>2006年2月建立。既然在csdn，那表示当时一心在学术，写的也多是计算机、找工作相关的内容。记录了我最单纯最充实的一段生活。放了这么多年没管，这个博客在csdn还能排3000多名让人有点惊讶。看来只要你有认真分享，就有人能找到其中的价值。当时写的最有价值的可能就是交叉编译BlueZ蓝牙协议栈到我的ARM板吧，这在2006年还不多。最终选择了离开，是因为当时的csdn很不稳定，让人烦躁。

</dd>
<dt><a href="http://hi.baidu.com/ifqq">http://hi.baidu.com/ifqq</a></dt><dd>离开csdn，来到baidu，少了许多专业气氛，大家的互动也增加了，慢慢的随着后来工作后身在异乡，也懒得写技术的东西了。开始传照片，show在异国的生活，表达对伟大祖国的思念(哈哈)。后期有一些猫猫的照片，喜欢猫的同志可以去参观下。最终离开，可能是对网页里写博客的厌倦吧。。
     <img class="" src="http://ifq.github.com/rc/219e75c61d06e65b9c163dff.jpg" width="600" title="haru猫" alt="外边捉来的猫，当时好兴奋，中文名字哈鲁，陪我度过了在日本的最后一段时光。">

</dd>
<dt><a href="http://t.qq.com/Jingtianwang">http://t.qq.com/Jingtianwang</a></dt><dd>离开baidu，被朋友邀请来到微博。（好像三次转移都是同一个人邀请的。。@kebing）那是不知道国内微博行情，以为腾讯会比新浪牛一些，结果现在发现好像不是了&ndash;。
</dd>
</dl>


<p>
一开始觉得微博拥有积少成多的力量，每个人不一定有功夫发一片博客，但是总有时间发发微博。这样就有很大的信息量和并且具有很强的实时性。这一点在一些社会公益、爱心传递、社会监督方面起到了很好的作用。但是谈到专业领域和兴趣爱好方面，微博上很少有高分享度的东西。大部分微博可以归类到以下几种：
</p><ul>
<li>我今天吃了两个包子
</li>
<li>今天好难过
</li>
<li>ZF都是傻逼，我要民主
</li>
<li>狮子座今年最牛逼
</li>
<li>你来，我热情拥抱。你走，我坦然放手。
</li>
</ul>




<!--more-->

<p>
玩了两年微博，看到的废话越来越多。和我最初的想象不太一样。如果大家都拿它来扯淡，你也不得不拿他来扯淡。。造成这种局面，我想和厂商的导向是有关系的。首先，微博似乎与搜索引擎隔绝，很难搜到微博的信息，所以大家不会觉得微博上有重要的东西，也不会自己在上边认真分享；另外，140 Byte的长度限制搞得很难写出有用的东西（这个限制最初是为了SMS短信设计的）。
</p>
<p>
各种的不满意，导致开始寻找替代的解决方案，不再关心快捷的互动，更关心有内容的交流。不需要人人都看你的页面，只需要与志同道合的人分享。其实Google+是个不错的东西，很方便，内容可长可短，还有很强的hangout视频功能，结合youtube是一种全新的体验。但是在国内你懂的。
</p>
<p>
最终我回到了blog，也许是回国之后度过了浮躁期，以及装修+生娃的忙碌之后，可以坐下来反朴贵真了～当然现在建博客也要与时俱进了，静态网页博客什么时候开始火的我不知道，不过感觉也很久了。但由于技术上有一定门槛，所以国内大多是IT人事居多，讲的也多是IT或宅男生活。我的这个可不同，讲二进制也讲木工，一虚一实两个极端。
</p>
<p>
<img class="" src="http://ifq.github.com/rc/P6142136-001.JPG" width="380" title="薄薄的刨花" alt="木工让人感觉到真实的存在，也许我应该另开一题讲讲为什么喜欢木工">
</p>
<p>
我使用的博客环境是 emacs + org-mode + octopress + github。四个词也许很多人都很陌生，回头可以慢慢分解（这篇不是技术博～），这里只简单介绍下。
</p>
<dl>
<dt>emacs</dt><dd>简单说是一个文本编辑器。特点是可定执性强、快捷键操作很方便，缺点是入门困难。也就是说是一个越用越好用的东西。鉴于我上班一直用这东西，所以觉得得心应手（不过还是emacs菜鸟）。
</dd>
<dt>org-mode</dt><dd>简单说就是emacs下的一种编辑模式，写提纲式的文档很快捷。写的文档可以很方便的导成html等格式。
</dd>
<dt>octopress</dt><dd>重点来了。生成静态博客的脚本工具。也就是说我用emacs+org写的简单的文档，通过这个工具就可以转化成博客组织形式的，格式统一的静态页面。（octopress实际是基于jekyll的）
</dd>
<dt>github</dt><dd>这里理解为一个提供免费站点host服务的网站就好。octopress生成的页面通过git工具同步到github，就成了你现在看到的页面。
</dd>
</dl>


<p>
看起来听复杂，其实。。真的有点复杂。但是复杂并不代表不好用，站点只要建立了，后边就很简单。这种方式的吸引力对我来说有几个：
</p><ol>
<li>让你专注你的内容
</li>
<li>很强的扩展和定制性
</li>
<li>内容全部在本地备份，从容应对未来变化。（话说以前的博客内容怎么弄过来才好呢～）
</li>
<li>用着心里舒服。。
</li>
<li>对移动设备的支持好。如果你现在拿手机在浏览，就有体会。
</li>
<li>HTML5。还能直接丢mp4文件进来，只要浏览器支持HTML5，就能播放。
</li>
<li>好像还有个啥来着
</li>
</ol>


<p>
忍不住贴张emacs的图给大家看看。
<img class="" src="http://ifq.github.com/rc/20120804-1.JPG" title="emacs写博客的样子" alt="看似单调的界面，其实暗藏玄机～">
</p>
<p>
其实说了这么多，并不是向谁解释我回博客的理由，而是为自己的博客找一个存在的理由，找一个定位，等于是写文档先开个题。
</p>
<p>
如果你赞同或者不赞同我的观点，都欢迎你在下面留言～谢谢。
</p><p><a rel="bookmark" href="http://ifq.github.com/blog/2012/08/03/1stpost/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[hello world - NO.-1 post]]></title>
<link href="http://ifq.github.com/blog/2012/07/29/helloworld/"/>
<updated>2012-07-29T00:00:00+08:00</updated>
<id>http://ifq.github.com/blog/2012/07/29/helloworld</id>

      <content type="html"><![CDATA[<p>
welcome to my blog. This is just a &#8220;hello world&#8221; testing post.
重新建立一个blog这个念头在脑袋里已经有些日子了，关于原因以后再说，总之今天算一个“冒烟测试”。
</p>


<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">TEST</h2>
<div class="outline-text-2" id="text-1">




</div>

<div id="outline-container-1-1" class="outline-3">
<h3 id="sec-1-1">视频</h3>
<div class="outline-text-3" id="text-1-1">

<p>   一个工厂里切OAK的视频，看着这过瘾。也许以后可以经常转点youtube的视频
   来给大家看。
   <div class="video-container">
   <video width='' height='' preload='none' controls poster='  /rc/dovetail-special.JPG'><source src='http://ifq.github.com/video/hull.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'/></video>
   </div>

</p></div>

</div>

<div id="outline-container-1-2" class="outline-3">
<h3 id="sec-1-2">各国文字测试</h3>
<div class="outline-text-3" id="text-1-2">

<dl>
<dt>中文</dt><dd>上边已经试过了
</dd>
<dt>英文</dt><dd>上边也试过了
</dd>
<dt>日文</dt><dd>现在的linux下没装日文输入法。。<br/>
             テストご挨拶、はじめまして。
</dd>
</dl>




</div>

</div>

<div id="outline-container-1-3" class="outline-3">
<h3 id="sec-1-3">Quote</h3>
<div class="outline-text-3" id="text-1-3">


   <blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong> <cite><a href='http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html'>Welcome to Island Marketing</a></cite></footer></blockquote>


</div>

</div>

<div id="outline-container-1-4" class="outline-3">
<h3 id="sec-1-4">二级标题</h3>
<div class="outline-text-3" id="text-1-4">



</div>

<div id="outline-container-1-4-1" class="outline-4">
<h4 id="sec-1-4-1">三级标题</h4>
<div class="outline-text-4" id="text-1-4-1">



</div>

<div id="outline-container-1-4-1-1" class="outline-5">
<h5 id="sec-1-4-1-1">四级标题</h5>
<div class="outline-text-5" id="text-1-4-1-1">


</div>
</div>
</div>

</div>

<div id="outline-container-1-5" class="outline-3">
<h3 id="sec-1-5">链接</h3>
<div class="outline-text-3" id="text-1-5">



</div>

<div id="outline-container-1-5-1" class="outline-4">
<h4 id="sec-1-5-1">ORG 链接</h4>
<div class="outline-text-4" id="text-1-5-1">

<p>    <a href="http://ifq.herokuapp.com">http://ifq.herokuapp.com</a>
    <a href="#sec-1-4-1-1">四级标题</a>
</p>


</div>
</div>

</div>

<div id="outline-container-1-6" class="outline-3">
<h3 id="sec-1-6">图片</h3>
<div class="outline-text-3" id="text-1-6">


</div>

<div id="outline-container-1-6-1" class="outline-4">
<h4 id="sec-1-6-1">ORG</h4>
<div class="outline-text-4" id="text-1-6-1">

<p>    <img src="file:///rc/dovetail-special.JPG"  alt="file:///rc/dovetail-special.JPG" />
</p>


</div>

</div>

<div id="outline-container-1-6-2" class="outline-4">
<h4 id="sec-1-6-2">markdown 格式</h4>
<div class="outline-text-4" id="text-1-6-2">


    <img class="" src="http://ifq.github.com/rc/dovetail-special.JPG" title="一个很特别的dovetail" alt="不知道这个pin和tail是怎么敲起来的啊">


</div>
</div>
</div>
</div>
<p><a rel="bookmark" href="http://ifq.github.com/blog/2012/07/29/helloworld/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
</feed>
